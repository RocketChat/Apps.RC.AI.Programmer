{"version":3,"sources":["src/client/AppsEngineUIClient.ts"],"names":[],"mappings":";;;AAAA,2CAA2D;AAE3D,0EAAuE;AACvE,mCAAuC;AAEvC;;GAEG;AACH,MAAa,kBAAkB;IAK3B;QACI,IAAI,CAAC,QAAQ,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;IAC/B,CAAC;IAED;;;;OAIG;IACI,WAAW;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,yCAAmB,CAAC,aAAa,CAAC,CAAC;IACxD,CAAC;IAED;;;;OAIG;IACI,WAAW;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,yCAAmB,CAAC,aAAa,CAAC,CAAC;IACxD,CAAC;IAED;;OAEG;IACI,IAAI;QACP,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;YACzB,IAAI,CAAC,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,cAAc,CAAC,sBAAU,CAAC,CAAA,EAAE;gBACnC,OAAO;aACV;YAED,MAAM,EACF,CAAC,sBAAU,CAAC,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,GAChC,GAAG,IAAI,CAAC;YAET,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;gBACxB,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBAEvC,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;oBAC/B,OAAO,CAAC,OAAO,CAAC,CAAC;iBACpB;gBACD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;aAC7B;QACL,CAAC,CAAC;QACF,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtD,CAAC;IAEO,IAAI,CAAC,MAAc,EAAE,OAAa;QACtC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC3B,MAAM,EAAE,GAAG,IAAA,oBAAY,EAAC,4BAAgB,CAAC,CAAC;YAE1C,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,sBAAU,CAAC,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;YAC1E,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AA7DD,gDA6DC","file":"AppsEngineUIClient.js","sourcesContent":["import { ACTION_ID_LENGTH, MESSAGE_ID } from './constants';\nimport type { IExternalComponentRoomInfo, IExternalComponentUserInfo } from './definition';\nimport { AppsEngineUIMethods } from './definition/AppsEngineUIMethods';\nimport { randomString } from './utils';\n\n/**\n * Represents the SDK provided to the external component.\n */\nexport class AppsEngineUIClient {\n    private listener: (this: Window, ev: MessageEvent) => any;\n\n    private callbacks: Map<string, (response: any) => any>;\n\n    constructor() {\n        this.listener = () => console.log('init');\n        this.callbacks = new Map();\n    }\n\n    /**\n     * Get the current user's information.\n     *\n     * @return the information of the current user.\n     */\n    public getUserInfo(): Promise<IExternalComponentUserInfo> {\n        return this.call(AppsEngineUIMethods.GET_USER_INFO);\n    }\n\n    /**\n     * Get the current room's information.\n     *\n     * @return the information of the current room.\n     */\n    public getRoomInfo(): Promise<IExternalComponentRoomInfo> {\n        return this.call(AppsEngineUIMethods.GET_ROOM_INFO);\n    }\n\n    /**\n     * Initialize the app  SDK for communicating with Rocket.Chat\n     */\n    public init(): void {\n        this.listener = ({ data }) => {\n            if (!data?.hasOwnProperty(MESSAGE_ID)) {\n                return;\n            }\n\n            const {\n                [MESSAGE_ID]: { id, payload },\n            } = data;\n\n            if (this.callbacks.has(id)) {\n                const resolve = this.callbacks.get(id);\n\n                if (typeof resolve === 'function') {\n                    resolve(payload);\n                }\n                this.callbacks.delete(id);\n            }\n        };\n        window.addEventListener('message', this.listener);\n    }\n\n    private call(action: string, payload?: any): Promise<any> {\n        return new Promise((resolve) => {\n            const id = randomString(ACTION_ID_LENGTH);\n\n            window.parent.postMessage({ [MESSAGE_ID]: { action, payload, id } }, '*');\n            this.callbacks.set(id, resolve);\n        });\n    }\n}\n"]}