{"version":3,"sources":["src/definition/messages/IPostMessageReacted.ts"],"names":[],"mappings":"","file":"IPostMessageReacted.js","sourcesContent":["import type { IHttp, IModify, IPersistence, IRead } from '../accessors';\nimport type { IMessageReactionContext } from './IMessageReactionContext';\n\n/**\n * Handler for after a message get a reaction or a reaction\n * got removed\n */\nexport interface IPostMessageReacted {\n    /**\n     * Method called *after* the message has been reacted.\n     *\n     * @param context The context of the reaction\n     * @param read An accessor to the environment\n     * @param http An accessor to the outside world\n     * @param persistence An accessor to the App's persistence\n     * @param modify An accessor to the modifier\n     */\n    executePostMessageReacted(context: IMessageReactionContext, read: IRead, http: IHttp, persistence: IPersistence, modify: IModify): Promise<void>;\n}\n"]}