{"version":3,"sources":["src/definition/api/IApiEndpoint.ts"],"names":[],"mappings":"","file":"IApiEndpoint.js","sourcesContent":["import type { IHttp, IModify, IPersistence, IRead } from '../accessors';\nimport type { IApiEndpointInfo } from './IApiEndpointInfo';\nimport type { IApiExample } from './IApiExample';\nimport type { IApiRequest } from './IRequest';\nimport type { IApiResponse } from './IResponse';\n\n/**\n * Represents an api endpoint that is being provided.\n */\nexport interface IApiEndpoint {\n    /**\n     * The last part of the api URL. Example: https://{your-server-address}/api/apps/public/{your-app-id}/{path}\n     * or https://{your-server-address}/api/apps/private/{your-app-id}/{private-hash}/{path}\n     */\n    path: string;\n    examples?: { [key: string]: IApiExample };\n    /**\n     * Whether this endpoint requires an authenticated user to access it.\n     *\n     * The authentication will be done by the host server using its own\n     * authentication system.\n     *\n     * If no authentication is provided, the request will be automatically\n     * rejected with a 401 status code.\n     */\n    authRequired?: boolean;\n\n    /**\n     * Called whenever the publically accessible url for this App is called,\n     * if you handle the methods differently then split it out so your code doesn't get too big.\n     */\n    get?(request: IApiRequest, endpoint: IApiEndpointInfo, read: IRead, modify: IModify, http: IHttp, persis: IPersistence): Promise<IApiResponse>;\n    post?(request: IApiRequest, endpoint: IApiEndpointInfo, read: IRead, modify: IModify, http: IHttp, persis: IPersistence): Promise<IApiResponse>;\n    put?(request: IApiRequest, endpoint: IApiEndpointInfo, read: IRead, modify: IModify, http: IHttp, persis: IPersistence): Promise<IApiResponse>;\n    delete?(request: IApiRequest, endpoint: IApiEndpointInfo, read: IRead, modify: IModify, http: IHttp, persis: IPersistence): Promise<IApiResponse>;\n    head?(request: IApiRequest, endpoint: IApiEndpointInfo, read: IRead, modify: IModify, http: IHttp, persis: IPersistence): Promise<IApiResponse>;\n    options?(request: IApiRequest, endpoint: IApiEndpointInfo, read: IRead, modify: IModify, http: IHttp, persis: IPersistence): Promise<IApiResponse>;\n    patch?(request: IApiRequest, endpoint: IApiEndpointInfo, read: IRead, modify: IModify, http: IHttp, persis: IPersistence): Promise<IApiResponse>;\n}\n"]}