{"version":3,"sources":["src/definition/uikit/UIKitIncomingInteractionTypes.ts"],"names":[],"mappings":";;;AAEA,8BAA8C;AAqD9C,SAAgB,+BAA+B,CAC3C,WAAkD;IAElD,OAAO,WAAW,CAAC,aAAa,KAAK,0BAAqB,CAAC,kBAAkB,CAAC;AAClF,CAAC;AAJD,0EAIC","file":"UIKitIncomingInteractionTypes.js","sourcesContent":["import type { IMessage } from '../messages';\nimport type { IRoom } from '../rooms';\nimport { UIActionButtonContext } from '../ui';\nimport type { IUser } from '../users';\nimport type { IUIKitSurface } from './IUIKitSurface';\nimport type {\n    IUIKitIncomingInteractionContextualBarContainer,\n    IUIKitIncomingInteractionMessageContainer,\n    IUIKitIncomingInteractionModalContainer,\n} from './UIKitIncomingInteractionContainer';\n\nexport interface IUIKitBaseIncomingInteraction {\n    appId: string;\n    user: IUser;\n    actionId?: string;\n    room?: IRoom;\n    triggerId?: string;\n    threadId?: string;\n}\n\nexport interface IUIKitBlockIncomingInteraction extends IUIKitBaseIncomingInteraction {\n    value?: string;\n    message?: IMessage;\n    triggerId: string;\n    actionId: string;\n    blockId: string;\n    room: IUIKitBaseIncomingInteraction['room'];\n    container: IUIKitIncomingInteractionModalContainer | IUIKitIncomingInteractionContextualBarContainer | IUIKitIncomingInteractionMessageContainer;\n}\n\nexport interface IUIKitViewSubmitIncomingInteraction extends IUIKitBaseIncomingInteraction {\n    view: IUIKitSurface;\n    triggerId: string;\n}\n\nexport interface IUIKitViewCloseIncomingInteraction extends IUIKitBaseIncomingInteraction {\n    view: IUIKitSurface;\n    isCleared: boolean;\n}\n\nexport interface IUIKitActionButtonIncomingInteraction extends IUIKitBaseIncomingInteraction {\n    buttonContext: UIActionButtonContext;\n    actionId: string;\n    triggerId: string;\n    room: IRoom;\n    message?: IMessage;\n    threadId?: string;\n}\n\nexport interface IUIKitActionButtonMessageBoxIncomingInteraction extends IUIKitActionButtonIncomingInteraction {\n    buttonContext: UIActionButtonContext.MESSAGE_BOX_ACTION;\n    text?: string;\n    threadId?: string;\n}\n\nexport function isMessageBoxIncomingInteraction(\n    interaction: IUIKitActionButtonIncomingInteraction,\n): interaction is IUIKitActionButtonMessageBoxIncomingInteraction {\n    return interaction.buttonContext === UIActionButtonContext.MESSAGE_BOX_ACTION;\n}\n"]}