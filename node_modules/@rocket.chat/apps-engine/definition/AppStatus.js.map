{"version":3,"sources":["src/definition/AppStatus.ts"],"names":[],"mappings":";;;AAAA,IAAY,SA+BX;AA/BD,WAAY,SAAS;IACjB,oEAAoE;IACpE,gCAAmB,CAAA;IACnB,kDAAkD;IAClD,wCAA2B,CAAA;IAC3B,6DAA6D;IAC7D,wCAA2B,CAAA;IAC3B,2GAA2G;IAC3G,0CAA6B,CAAA;IAC7B,oHAAoH;IACpH,kDAAqC,CAAA;IACrC;;;OAGG;IACH,gEAAmD,CAAA;IACnD;;OAEG;IACH,kEAAqD,CAAA;IACrD;;OAEG;IACH,4EAA+D,CAAA;IAC/D,uEAAuE;IACvE,8CAAiC,CAAA;IACjC,+CAA+C;IAC/C,oDAAuC,CAAA;IACvC,oEAAuD,CAAA;IACvD,uDAAuD;IACvD,kCAAqB,CAAA;AACzB,CAAC,EA/BW,SAAS,yBAAT,SAAS,QA+BpB;AAED,MAAa,iBAAiB;IACnB,SAAS,CAAC,MAAiB;QAC9B,QAAQ,MAAM,EAAE;YACZ,KAAK,SAAS,CAAC,YAAY,CAAC;YAC5B,KAAK,SAAS,CAAC,gBAAgB;gBAC3B,OAAO,IAAI,CAAC;YAChB;gBACI,OAAO,KAAK,CAAC;SACpB;IACL,CAAC;IAEM,UAAU,CAAC,MAAiB;QAC/B,QAAQ,MAAM,EAAE;YACZ,KAAK,SAAS,CAAC,uBAAuB,CAAC;YACvC,KAAK,SAAS,CAAC,cAAc,CAAC;YAC9B,KAAK,SAAS,CAAC,iBAAiB,CAAC;YACjC,KAAK,SAAS,CAAC,yBAAyB,CAAC;YACzC,KAAK,SAAS,CAAC,wBAAwB,CAAC;YACxC,KAAK,SAAS,CAAC,6BAA6B,CAAC;YAC7C,KAAK,SAAS,CAAC,QAAQ;gBACnB,OAAO,IAAI,CAAC;YAChB;gBACI,OAAO,KAAK,CAAC;SACpB;IACL,CAAC;IAEM,OAAO,CAAC,MAAiB;QAC5B,OAAO,CAAC,SAAS,CAAC,cAAc,EAAE,SAAS,CAAC,uBAAuB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC1F,CAAC;CACJ;AA7BD,8CA6BC;AAEY,QAAA,cAAc,GAAG,IAAI,iBAAiB,EAAE,CAAC","file":"AppStatus.js","sourcesContent":["export enum AppStatus {\n    /** The status is known, aka not been constructed the proper way. */\n    UNKNOWN = 'unknown',\n    /** The App has been constructed but that's it. */\n    CONSTRUCTED = 'constructed',\n    /** The App's `initialize()` was called and returned true. */\n    INITIALIZED = 'initialized',\n    /** The App's `onEnable()` was called, returned true, and this was done automatically (system start up). */\n    AUTO_ENABLED = 'auto_enabled',\n    /** The App's `onEnable()` was called, returned true, and this was done by the user such as installing a new one. */\n    MANUALLY_ENABLED = 'manually_enabled',\n    /**\n     * The App was disabled due to an error while attempting to compile it.\n     * An attempt to enable it again will fail, as it needs to be updated.\n     */\n    COMPILER_ERROR_DISABLED = 'compiler_error_disabled',\n    /**\n     * The App was disable due to its license being invalid\n     */\n    INVALID_LICENSE_DISABLED = 'invalid_license_disabled',\n    /**\n     * The app was disabled due to an invalid installation or validation in its signature.\n     */\n    INVALID_INSTALLATION_DISABLED = 'invalid_installation_disabled',\n    /** The App was disabled due to an unrecoverable error being thrown. */\n    ERROR_DISABLED = 'error_disabled',\n    /** The App was manually disabled by a user. */\n    MANUALLY_DISABLED = 'manually_disabled',\n    INVALID_SETTINGS_DISABLED = 'invalid_settings_disabled',\n    /** The App was disabled due to other circumstances. */\n    DISABLED = 'disabled',\n}\n\nexport class AppStatusUtilsDef {\n    public isEnabled(status: AppStatus): boolean {\n        switch (status) {\n            case AppStatus.AUTO_ENABLED:\n            case AppStatus.MANUALLY_ENABLED:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    public isDisabled(status: AppStatus): boolean {\n        switch (status) {\n            case AppStatus.COMPILER_ERROR_DISABLED:\n            case AppStatus.ERROR_DISABLED:\n            case AppStatus.MANUALLY_DISABLED:\n            case AppStatus.INVALID_SETTINGS_DISABLED:\n            case AppStatus.INVALID_LICENSE_DISABLED:\n            case AppStatus.INVALID_INSTALLATION_DISABLED:\n            case AppStatus.DISABLED:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    public isError(status: AppStatus): boolean {\n        return [AppStatus.ERROR_DISABLED, AppStatus.COMPILER_ERROR_DISABLED].includes(status);\n    }\n}\n\nexport const AppStatusUtils = new AppStatusUtilsDef();\n"]}