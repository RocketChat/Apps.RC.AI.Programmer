{"version":3,"sources":["src/definition/scheduler/IProcessor.ts"],"names":[],"mappings":";;;AAsCA;;GAEG;AACH,IAAY,WAGX;AAHD,WAAY,WAAW;IACnB,kCAAmB,CAAA;IACnB,sCAAuB,CAAA;AAC3B,CAAC,EAHW,WAAW,2BAAX,WAAW,QAGtB","file":"IProcessor.js","sourcesContent":["import type { IHttp, IModify, IPersistence, IRead } from '../accessors';\n\n/** Represents a processor that is used by the scheduler methods */\nexport interface IProcessor {\n    /** The processor's identifier */\n    id: string;\n    /** If provided, the processor will be configured with the setting as soon as it gets registered */\n    startupSetting?: StartupSetting;\n    /** The function that will be run on a given scheudle */\n    processor(jobContext: IJobContext, read: IRead, modify: IModify, http: IHttp, persis: IPersistence): Promise<void>;\n}\n\n/** The `data` object provided to the processor during the registering process */\nexport interface IJobContext {\n    [key: string]: any;\n}\n\ntype StartupSetting = IOnetimeStartup | IRecurringStartup;\n\n/**\n * Processor setting for running once after being registered\n */\nexport interface IOnetimeStartup {\n    type: StartupType.ONETIME;\n    when: string | Date;\n    data?: object;\n}\n\n/**\n * Processor setting for running recurringly after being registered\n */\nexport interface IRecurringStartup {\n    type: StartupType.RECURRING;\n    interval: string | number;\n    skipImmediate?: boolean;\n    data?: object;\n}\n\n/**\n * Jobs' startup types\n */\nexport enum StartupType {\n    ONETIME = 'onetime',\n    RECURRING = 'recurring',\n}\n"]}