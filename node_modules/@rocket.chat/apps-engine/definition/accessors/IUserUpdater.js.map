{"version":3,"sources":["src/definition/accessors/IUserUpdater.ts"],"names":[],"mappings":"","file":"IUserUpdater.js","sourcesContent":["import type { IUser } from '../users/IUser';\n\n/**\n * Updating a user is a more granular approach, since\n * it is one of the more sensitive aspects of Rocket.Chat -\n * or any other system for that matter.\n *\n * Allowing apps to modify _all_ the aspects of a user\n * would open a critical surface for them to abuse such\n * power and \"take hold\" of a server, for instance.\n */\nexport interface IUserUpdater {\n    updateStatusText(user: IUser, statusText: IUser['statusText']): Promise<boolean>;\n    updateStatus(user: IUser, statusText: IUser['statusText'], status: IUser['status']): Promise<boolean>;\n    updateBio(user: IUser, bio: IUser['bio']): Promise<boolean>;\n    updateCustomFields(user: IUser, customFields: IUser['customFields']): Promise<boolean>;\n    deactivate(userId: IUser['id'], confirmRelinquish: boolean): Promise<boolean>;\n}\n"]}