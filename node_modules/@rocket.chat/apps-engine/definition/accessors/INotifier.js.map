{"version":3,"sources":["src/definition/accessors/INotifier.ts"],"names":[],"mappings":";;;AAKA,IAAY,WAEX;AAFD,WAAY,WAAW;IACnB,4BAAa,CAAA;AACjB,CAAC,EAFW,WAAW,2BAAX,WAAW,QAEtB","file":"INotifier.js","sourcesContent":["import type { IMessage } from '../messages';\nimport type { IRoom } from '../rooms';\nimport type { IUser } from '../users';\nimport type { IMessageBuilder } from './IMessageBuilder';\n\nexport enum TypingScope {\n    Room = 'room',\n}\n\nexport interface ITypingOptions {\n    /**\n     * The typing scope where the typing message should be presented,\n     * TypingScope.Room by default.\n     */\n    scope?: TypingScope;\n    /**\n     * The id of the typing scope\n     *\n     * TypingScope.Room <-> room.id\n     */\n    id: string;\n    /**\n     * The name of the user who is typing the message\n     *\n     * **Note**: If not provided, it will use app assigned\n     * user's name by default.\n     */\n    username?: string;\n}\n\nexport interface INotifier {\n    /**\n     * Notifies the provided user of the provided message.\n     *\n     * **Note**: Notifications only are shown to the user if they are\n     * online and it only stays around for the duration of their session.\n     *\n     * @param user The user who should be notified\n     * @param message The message with the content to notify the user about\n     */\n    notifyUser(user: IUser, message: IMessage): Promise<void>;\n\n    /**\n     * Notifies all of the users in the provided room.\n     *\n     * **Note**: Notifications only are shown to those online\n     * and it only stays around for the duration of their session.\n     *\n     * @param room The room which to notify the users in\n     * @param message The message content to notify users about\n     */\n    notifyRoom(room: IRoom, message: IMessage): Promise<void>;\n\n    /**\n     * Notifies all of the users a typing indicator in the provided scope.\n     *\n     * @returns a cancellation function to stop typing\n     */\n    typing(options: ITypingOptions): Promise<() => Promise<void>>;\n\n    /** Gets a new message builder for building a notification message. */\n    getMessageBuilder(): IMessageBuilder;\n}\n"]}