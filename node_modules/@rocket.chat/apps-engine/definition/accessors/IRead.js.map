{"version":3,"sources":["src/definition/accessors/IRead.ts"],"names":[],"mappings":"","file":"IRead.js","sourcesContent":["import type { ICloudWorkspaceRead } from './ICloudWorkspaceRead';\nimport type { IEnvironmentRead } from './IEnvironmentRead';\nimport type { ILivechatRead } from './ILivechatRead';\nimport type { IMessageRead } from './IMessageRead';\nimport type { INotifier } from './INotifier';\nimport type { IOAuthAppsReader } from './IOAuthAppsReader';\nimport type { IPersistenceRead } from './IPersistenceRead';\nimport type { IRoleRead } from './IRoleRead';\nimport type { IRoomRead } from './IRoomRead';\nimport type { IThreadRead } from './IThreadRead';\nimport type { IUploadRead } from './IUploadRead';\nimport type { IUserRead } from './IUserRead';\nimport type { IVideoConferenceRead } from './IVideoConferenceRead';\n\n/**\n * The IRead accessor provides methods for accessing the\n * Rocket.Chat's environment in a read-only-fashion.\n * It is safe to be injected in multiple places, idempotent and extensible\n */\nexport interface IRead {\n    /** Gets the IEnvironmentRead instance, contains settings and environmental variables. */\n    getEnvironmentReader(): IEnvironmentRead;\n\n    /** Gets the IThreadRead instance */\n\n    getThreadReader(): IThreadRead;\n\n    /** Gets the IMessageRead instance. */\n    getMessageReader(): IMessageRead;\n\n    /** Gets the IPersistenceRead instance. */\n    getPersistenceReader(): IPersistenceRead;\n\n    /** Gets the IRoomRead instance. */\n    getRoomReader(): IRoomRead;\n\n    /** Gets the IUserRead instance. */\n    getUserReader(): IUserRead;\n\n    /** Gets the INotifier for notifying users/rooms. */\n    getNotifier(): INotifier;\n\n    getLivechatReader(): ILivechatRead;\n    getUploadReader(): IUploadRead;\n    getCloudWorkspaceReader(): ICloudWorkspaceRead;\n\n    getVideoConferenceReader(): IVideoConferenceRead;\n\n    getOAuthAppsReader(): IOAuthAppsReader;\n\n    getRoleReader(): IRoleRead;\n}\n"]}