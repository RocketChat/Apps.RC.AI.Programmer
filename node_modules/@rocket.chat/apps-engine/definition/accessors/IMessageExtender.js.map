{"version":3,"sources":["src/definition/accessors/IMessageExtender.ts"],"names":[],"mappings":"","file":"IMessageExtender.js","sourcesContent":["import type { IMessage, IMessageAttachment } from '../messages';\nimport type { RocketChatAssociationModel } from '../metadata';\n\nexport interface IMessageExtender {\n    kind: RocketChatAssociationModel.MESSAGE;\n\n    /**\n     * Adds a custom field to the message.\n     * Note: This key can not already exist or it will throw an error.\n     * Note: The key must not contain a period in it, an error will be thrown.\n     *\n     * @param key the name of the custom field\n     * @param value the value of this custom field\n     */\n    addCustomField(key: string, value: any): IMessageExtender;\n\n    /**\n     * Adds a single attachment to the message.\n     *\n     * @param attachment the item to add\n     */\n    addAttachment(attachment: IMessageAttachment): IMessageExtender;\n\n    /**\n     * Adds all of the provided attachments to the message.\n     *\n     * @param attachments an array of attachments\n     */\n    addAttachments(attachments: Array<IMessageAttachment>): IMessageExtender;\n\n    /**\n     * Gets the resulting message that has been extended at the point of calling it.\n     * Note: modifying the returned value will have no effect.\n     */\n    getMessage(): IMessage;\n}\n"]}