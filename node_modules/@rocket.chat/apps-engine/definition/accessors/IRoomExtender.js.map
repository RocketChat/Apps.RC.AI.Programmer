{"version":3,"sources":["src/definition/accessors/IRoomExtender.ts"],"names":[],"mappings":"","file":"IRoomExtender.js","sourcesContent":["import type { RocketChatAssociationModel } from '../metadata';\nimport type { IRoom } from '../rooms';\nimport type { IUser } from '../users';\n\nexport interface IRoomExtender {\n    kind: RocketChatAssociationModel.ROOM;\n\n    /**\n     * Adds a custom field to the room.\n     * Note: This key can not already exist or it will throw an error.\n     * Note: The key must not contain a period in it, an error will be thrown.\n     *\n     * @param key the name of the custom field\n     * @param value the value of this custom field\n     */\n    addCustomField(key: string, value: any): IRoomExtender;\n\n    /**\n     * Adds a user to the room.\n     *\n     * @param user the user which is to be added to the room\n     */\n    addMember(user: IUser): IRoomExtender;\n\n    /**\n     * Get a list of users being added to the room.\n     */\n    getMembersBeingAdded(): Array<IUser>;\n\n    /**\n     * Get a list of usernames of users being added to the room.\n     */\n    getUsernamesOfMembersBeingAdded(): Array<string>;\n\n    /**\n     * Gets the resulting room that has been extended at the point of calling this.\n     * Note: modifying the returned value will have no effect.\n     */\n    getRoom(): IRoom;\n}\n"]}