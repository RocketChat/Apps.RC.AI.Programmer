{"version":3,"sources":["src/definition/accessors/IRoleRead.ts"],"names":[],"mappings":"","file":"IRoleRead.js","sourcesContent":["import type { IRole } from '../roles';\n\n/**\n * Interface for reading roles.\n */\nexport interface IRoleRead {\n    /**\n     * Retrieves a role by its id or name.\n     * @param idOrName The id or name of the role to retrieve.\n     * @param appId The id of the app.\n     * @returns The role, if found.\n     * @returns null if no role is found.\n     * @throws If there is an error while retrieving the role.\n     */\n    getOneByIdOrName(idOrName: IRole['id'] | IRole['name'], appId: string): Promise<IRole | null>;\n\n    /**\n     * Retrieves all custom roles.\n     * @param appId The id of the app.\n     * @returns All custom roles.\n     * @throws If there is an error while retrieving the roles.\n     * @throws If the app does not have the necessary permissions.\n     * @see IRole.protected\n     * @see AppPermissions.role.read\n     */\n    getCustomRoles(appId: string): Promise<Array<IRole>>;\n}\n"]}