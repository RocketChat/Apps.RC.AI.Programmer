{"version":3,"sources":["src/definition/accessors/ILivechatUpdater.ts"],"names":[],"mappings":"","file":"ILivechatUpdater.js","sourcesContent":["import type { ILivechatTransferData, IVisitor } from '../livechat';\nimport type { IRoom } from '../rooms';\nimport type { IUser } from '../users';\n\nexport interface ILivechatUpdater {\n    /**\n     * Transfer a Livechat visitor to another room\n     *\n     * @param visitor Visitor to be transferred\n     * @param transferData The data to execute the transferring\n     */\n    transferVisitor(visitor: IVisitor, transferData: ILivechatTransferData): Promise<boolean>;\n\n    /**\n     * Closes a Livechat room\n     *\n     * @param room The room to be closed\n     * @param comment The comment explaining the reason for closing the room\n     * @param closer The user that closes the room\n     */\n    closeRoom(room: IRoom, comment: string, closer?: IUser): Promise<boolean>;\n\n    /**\n     * Set a livechat visitor's custom fields by its token\n     * @param token The visitor's token\n     * @param key The key in the custom fields\n     * @param value The value to be set\n     * @param overwrite Whether overwrite or not\n     *\n     * @returns Promise to whether success or not\n     */\n    setCustomFields(token: IVisitor['token'], key: string, value: string, overwrite: boolean): Promise<boolean>;\n}\n"]}