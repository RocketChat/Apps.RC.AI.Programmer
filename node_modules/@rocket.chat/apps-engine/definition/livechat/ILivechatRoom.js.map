{"version":3,"sources":["src/definition/livechat/ILivechatRoom.ts"],"names":[],"mappings":";;;AAAA,oCAAoC;AAMpC,IAAY,qBAMX;AAND,WAAY,qBAAqB;IAC7B,0CAAiB,CAAA;IACjB,wCAAe,CAAA;IACf,oCAAW,CAAA;IACX,oCAAW,CAAA;IACX,wCAAe,CAAA;AACnB,CAAC,EANW,qBAAqB,qCAArB,qBAAqB,QAMhC;AAmCM,MAAM,cAAc,GAAG,CAAC,IAAW,EAAyB,EAAE;IACjE,OAAO,IAAI,CAAC,IAAI,KAAK,gBAAQ,CAAC,SAAS,CAAC;AAC5C,CAAC,CAAC;AAFW,QAAA,cAAc,kBAEzB;AACK,MAAM,iBAAiB,GAAG,CAAC,IAAmB,EAA6D,EAAE;IAChH,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,KAAK,CAAC;AACrD,CAAC,CAAC;AAFW,QAAA,iBAAiB,qBAE5B","file":"ILivechatRoom.js","sourcesContent":["import { RoomType } from '../rooms';\nimport type { IRoom } from '../rooms/IRoom';\nimport type { IUser } from '../users';\nimport type { IDepartment } from './IDepartment';\nimport type { IVisitor } from './IVisitor';\n\nexport enum OmnichannelSourceType {\n    WIDGET = 'widget',\n    EMAIL = 'email',\n    SMS = 'sms',\n    APP = 'app',\n    OTHER = 'other',\n}\n\ninterface IOmnichannelSourceApp {\n    type: 'app';\n    id: string;\n    // A human readable alias that goes with the ID, for post analytical purposes\n    alias?: string;\n    // A label to be shown in the room info\n    label?: string;\n    sidebarIcon?: string;\n    defaultIcon?: string;\n}\ntype OmnichannelSource =\n    | {\n          type: Omit<OmnichannelSourceType, 'app'>;\n      }\n    | IOmnichannelSourceApp;\n\nexport interface IVisitorChannelInfo {\n    lastMessageTs?: Date;\n    phone?: string;\n}\n\nexport interface ILivechatRoom extends IRoom {\n    visitor: IVisitor;\n    visitorChannelInfo?: IVisitorChannelInfo;\n    department?: IDepartment;\n    servedBy?: IUser;\n    responseBy?: IUser;\n    isWaitingResponse: boolean;\n    isOpen: boolean;\n    closedAt?: Date;\n    source?: OmnichannelSource;\n}\n\nexport const isLivechatRoom = (room: IRoom): room is ILivechatRoom => {\n    return room.type === RoomType.LIVE_CHAT;\n};\nexport const isLivechatFromApp = (room: ILivechatRoom): room is ILivechatRoom & { source: IOmnichannelSourceApp } => {\n    return room.source && room.source.type === 'app';\n};\n"]}