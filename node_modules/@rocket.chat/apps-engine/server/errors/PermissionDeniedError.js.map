{"version":3,"sources":["src/server/errors/PermissionDeniedError.ts"],"names":[],"mappings":";;;AAUA,MAAa,qBAAsB,SAAQ,KAAK;IAC5C,YAAY,EAAE,KAAK,EAAE,kBAAkB,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAgC;QAChG,IAAI,OAAO,EAAE;YACT,KAAK,CAAC,OAAO,CAAC,CAAC;SAClB;aAAM;YACH,MAAM,WAAW,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,IAAI,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAE9F,KAAK,CACD,6BAA6B,UAAU,CAAC,CAAC,CAAC,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC,EAAE,gBAAgB,KAAK,sCAAsC;gBACvH,IAAI,WAAW,sDAAsD;gBACrE,WAAW,MAAM,EAAE,CAC1B,CAAC;SACL;IACL,CAAC;CACJ;AAdD,sDAcC","file":"PermissionDeniedError.js","sourcesContent":["import type { IPermission } from '../../definition/permissions/IPermission';\n\ninterface IPermissionDeniedErrorParams {\n    appId: string;\n    missingPermissions: Array<IPermission>;\n    methodName?: string;\n    reason?: string;\n    message?: string;\n}\n\nexport class PermissionDeniedError extends Error {\n    constructor({ appId, missingPermissions, methodName, reason, message }: IPermissionDeniedErrorParams) {\n        if (message) {\n            super(message);\n        } else {\n            const permissions = missingPermissions.map((permission) => `\"${permission.name}\"`).join(', ');\n\n            super(\n                `Failed to call the method ${methodName ? `\"${methodName}\"` : ''} as the app (${appId}) lacks the following permissions:\\n` +\n                    `[${permissions}]. Declare them in your app.json to fix the issue.\\n` +\n                    `reason: ${reason}`,\n            );\n        }\n    }\n}\n"]}