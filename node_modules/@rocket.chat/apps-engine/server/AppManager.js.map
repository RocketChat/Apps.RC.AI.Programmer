{"version":3,"sources":["src/server/AppManager.ts"],"names":[],"mappings":"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","file":"AppManager.js","sourcesContent":["import { Buffer } from 'buffer';\n\nimport { AppStatus, AppStatusUtils } from '../definition/AppStatus';\nimport type { IAppInfo } from '../definition/metadata';\nimport { AppMethod } from '../definition/metadata';\nimport type { IPermission } from '../definition/permissions/IPermission';\nimport type { IUser } from '../definition/users';\nimport { UserType } from '../definition/users';\nimport type { PersistenceBridge, UserBridge } from './bridges';\nimport { AppBridges } from './bridges';\nimport type { IInternalPersistenceBridge } from './bridges/IInternalPersistenceBridge';\nimport type { IInternalUserBridge } from './bridges/IInternalUserBridge';\nimport { AppCompiler, AppFabricationFulfillment, AppPackageParser } from './compiler';\nimport { InvalidLicenseError } from './errors';\nimport { InvalidInstallationError } from './errors/InvalidInstallationError';\nimport type { IGetAppsFilter } from './IGetAppsFilter';\nimport {\n    AppAccessorManager,\n    AppApiManager,\n    AppExternalComponentManager,\n    AppLicenseManager,\n    AppListenerManager,\n    AppSchedulerManager,\n    AppSettingsManager,\n    AppSlashCommandManager,\n    AppVideoConfProviderManager,\n} from './managers';\nimport { AppSignatureManager } from './managers/AppSignatureManager';\nimport { UIActionButtonManager } from './managers/UIActionButtonManager';\nimport type { IMarketplaceInfo } from './marketplace';\nimport { DisabledApp } from './misc/DisabledApp';\nimport { defaultPermissions } from './permissions/AppPermissions';\nimport { ProxiedApp } from './ProxiedApp';\nimport { AppsEngineEmptyRuntime } from './runtime/AppsEngineEmptyRuntime';\nimport type { IAppStorageItem } from './storage';\nimport { AppLogStorage, AppMetadataStorage } from './storage';\nimport { AppSourceStorage } from './storage/AppSourceStorage';\nimport { AppInstallationSource } from './storage/IAppStorageItem';\n\nexport interface IAppInstallParameters {\n    enable: boolean;\n    marketplaceInfo?: IMarketplaceInfo;\n    permissionsGranted?: Array<IPermission>;\n    user: IUser;\n}\n\nexport interface IAppUninstallParameters {\n    user: IUser;\n}\n\nexport interface IAppManagerDeps {\n    metadataStorage: AppMetadataStorage;\n    logStorage: AppLogStorage;\n    bridges: AppBridges;\n    sourceStorage: AppSourceStorage;\n}\n\ninterface IPurgeAppConfigOpts {\n    keepScheduledJobs?: boolean;\n}\n\nexport class AppManager {\n    public static Instance: AppManager;\n\n    // apps contains all of the Apps\n    private readonly apps: Map<string, ProxiedApp>;\n\n    private readonly appMetadataStorage: AppMetadataStorage;\n\n    private appSourceStorage: AppSourceStorage;\n\n    private readonly logStorage: AppLogStorage;\n\n    private readonly bridges: AppBridges;\n\n    private readonly parser: AppPackageParser;\n\n    private readonly compiler: AppCompiler;\n\n    private readonly accessorManager: AppAccessorManager;\n\n    private readonly listenerManager: AppListenerManager;\n\n    private readonly commandManager: AppSlashCommandManager;\n\n    private readonly apiManager: AppApiManager;\n\n    private readonly externalComponentManager: AppExternalComponentManager;\n\n    private readonly settingsManager: AppSettingsManager;\n\n    private readonly licenseManager: AppLicenseManager;\n\n    private readonly schedulerManager: AppSchedulerManager;\n\n    private readonly uiActionButtonManager: UIActionButtonManager;\n\n    private readonly videoConfProviderManager: AppVideoConfProviderManager;\n\n    private readonly signatureManager: AppSignatureManager;\n\n    private isLoaded: boolean;\n\n    constructor({ metadataStorage, logStorage, bridges, sourceStorage }: IAppManagerDeps) {\n        // Singleton style. There can only ever be one AppManager instance\n        if (typeof AppManager.Instance !== 'undefined') {\n            throw new Error('There is already a valid AppManager instance');\n        }\n\n        if (metadataStorage instanceof AppMetadataStorage) {\n            this.appMetadataStorage = metadataStorage;\n        } else {\n            throw new Error('Invalid instance of the AppMetadataStorage');\n        }\n\n        if (logStorage instanceof AppLogStorage) {\n            this.logStorage = logStorage;\n        } else {\n            throw new Error('Invalid instance of the AppLogStorage');\n        }\n\n        if (bridges instanceof AppBridges) {\n            this.bridges = bridges;\n        } else {\n            throw new Error('Invalid instance of the AppBridges');\n        }\n\n        if (sourceStorage instanceof AppSourceStorage) {\n            this.appSourceStorage = sourceStorage;\n        } else {\n            throw new Error('Invalid instance of the AppSourceStorage');\n        }\n\n        this.apps = new Map<string, ProxiedApp>();\n\n        this.parser = new AppPackageParser();\n        this.compiler = new AppCompiler();\n        this.accessorManager = new AppAccessorManager(this);\n        this.listenerManager = new AppListenerManager(this);\n        this.commandManager = new AppSlashCommandManager(this);\n        this.apiManager = new AppApiManager(this);\n        this.externalComponentManager = new AppExternalComponentManager();\n        this.settingsManager = new AppSettingsManager(this);\n        this.licenseManager = new AppLicenseManager(this);\n        this.schedulerManager = new AppSchedulerManager(this);\n        this.uiActionButtonManager = new UIActionButtonManager(this);\n        this.videoConfProviderManager = new AppVideoConfProviderManager(this);\n        this.signatureManager = new AppSignatureManager(this);\n\n        this.isLoaded = false;\n        AppManager.Instance = this;\n    }\n\n    /** Gets the instance of the storage connector. */\n    public getStorage(): AppMetadataStorage {\n        return this.appMetadataStorage;\n    }\n\n    /** Gets the instance of the log storage connector. */\n    public getLogStorage(): AppLogStorage {\n        return this.logStorage;\n    }\n\n    /** Gets the instance of the App package parser. */\n    public getParser(): AppPackageParser {\n        return this.parser;\n    }\n\n    /** Gets the compiler instance. */\n    public getCompiler(): AppCompiler {\n        return this.compiler;\n    }\n\n    /** Gets the accessor manager instance. */\n    public getAccessorManager(): AppAccessorManager {\n        return this.accessorManager;\n    }\n\n    /** Gets the instance of the Bridge manager. */\n    public getBridges(): AppBridges {\n        return this.bridges;\n    }\n\n    /** Gets the instance of the listener manager. */\n    public getListenerManager(): AppListenerManager {\n        return this.listenerManager;\n    }\n\n    /** Gets the command manager's instance. */\n    public getCommandManager(): AppSlashCommandManager {\n        return this.commandManager;\n    }\n\n    public getVideoConfProviderManager(): AppVideoConfProviderManager {\n        return this.videoConfProviderManager;\n    }\n\n    public getLicenseManager(): AppLicenseManager {\n        return this.licenseManager;\n    }\n\n    /** Gets the api manager's instance. */\n    public getApiManager(): AppApiManager {\n        return this.apiManager;\n    }\n\n    /** Gets the external component manager's instance. */\n    public getExternalComponentManager(): AppExternalComponentManager {\n        return this.externalComponentManager;\n    }\n\n    /** Gets the manager of the settings, updates and getting. */\n    public getSettingsManager(): AppSettingsManager {\n        return this.settingsManager;\n    }\n\n    public getSchedulerManager(): AppSchedulerManager {\n        return this.schedulerManager;\n    }\n\n    public getUIActionButtonManager(): UIActionButtonManager {\n        return this.uiActionButtonManager;\n    }\n\n    public getSignatureManager(): AppSignatureManager {\n        return this.signatureManager;\n    }\n\n    /** Gets whether the Apps have been loaded or not. */\n    public areAppsLoaded(): boolean {\n        return this.isLoaded;\n    }\n\n    public setSourceStorage(storage: AppSourceStorage): void {\n        this.appSourceStorage = storage;\n    }\n\n    /**\n     * Goes through the entire loading up process.\n     * Expect this to take some time, as it goes through a very\n     * long process of loading all the Apps up.\n     */\n    public async load(): Promise<boolean> {\n        // You can not load the AppManager system again\n        // if it has already been loaded.\n        if (this.isLoaded) {\n            return true;\n        }\n\n        const items: Map<string, IAppStorageItem> = await this.appMetadataStorage.retrieveAll();\n\n        for (const item of items.values()) {\n            try {\n                const appPackage = await this.appSourceStorage.fetch(item);\n                const unpackageResult = await this.getParser().unpackageApp(appPackage);\n\n                const app = await this.getCompiler().toSandBox(this, item, unpackageResult);\n\n                this.apps.set(item.id, app);\n            } catch (e) {\n                console.warn(`Error while compiling the App \"${item.info.name} (${item.id})\":`);\n                console.error(e);\n\n                const app = DisabledApp.createNew(item.info, AppStatus.COMPILER_ERROR_DISABLED);\n                app.getLogger().error(e);\n                await this.logStorage.storeEntries(app.getID(), app.getLogger());\n\n                const prl = new ProxiedApp(this, item, app, new AppsEngineEmptyRuntime(app));\n                this.apps.set(item.id, prl);\n            }\n        }\n\n        this.isLoaded = true;\n        return true;\n    }\n\n    public async enableAll(): Promise<Array<AppFabricationFulfillment>> {\n        const affs: Array<AppFabricationFulfillment> = [];\n\n        // Let's initialize them\n        for (const rl of this.apps.values()) {\n            const aff = new AppFabricationFulfillment();\n\n            aff.setAppInfo(rl.getInfo());\n            aff.setImplementedInterfaces(rl.getImplementationList());\n            aff.setApp(rl);\n            affs.push(aff);\n\n            if (AppStatusUtils.isDisabled(rl.getStatus())) {\n                // Usually if an App is disabled before it's initialized,\n                // then something (such as an error) occured while\n                // it was compiled or something similar.\n                // We still have to validate its license, though\n                await rl.validateLicense();\n\n                continue;\n            }\n\n            await this.initializeApp(rl.getStorageItem(), rl, false, true).catch(console.error);\n        }\n\n        // Let's ensure the required settings are all set\n        for (const rl of this.apps.values()) {\n            if (AppStatusUtils.isDisabled(rl.getStatus())) {\n                continue;\n            }\n\n            if (!this.areRequiredSettingsSet(rl.getStorageItem())) {\n                await rl.setStatus(AppStatus.INVALID_SETTINGS_DISABLED).catch(console.error);\n            }\n        }\n\n        // Now let's enable the apps which were once enabled\n        // but are not currently disabled.\n        for (const app of this.apps.values()) {\n            if (!AppStatusUtils.isDisabled(app.getStatus()) && AppStatusUtils.isEnabled(app.getPreviousStatus())) {\n                await this.enableApp(app.getStorageItem(), app, true, app.getPreviousStatus() === AppStatus.MANUALLY_ENABLED).catch(console.error);\n            } else if (!AppStatusUtils.isError(app.getStatus())) {\n                this.listenerManager.lockEssentialEvents(app);\n                this.uiActionButtonManager.clearAppActionButtons(app.getID());\n            }\n        }\n\n        return affs;\n    }\n\n    public async unload(isManual: boolean): Promise<void> {\n        // If the AppManager hasn't been loaded yet, then\n        // there is nothing to unload\n        if (!this.isLoaded) {\n            return;\n        }\n\n        for (const app of this.apps.values()) {\n            if (app.getStatus() === AppStatus.INITIALIZED) {\n                await this.purgeAppConfig(app);\n            } else if (!AppStatusUtils.isDisabled(app.getStatus())) {\n                await this.disable(app.getID(), isManual ? AppStatus.MANUALLY_DISABLED : AppStatus.DISABLED);\n            }\n\n            this.listenerManager.releaseEssentialEvents(app);\n        }\n\n        // Remove all the apps from the system now that we have unloaded everything\n        this.apps.clear();\n\n        this.isLoaded = false;\n    }\n\n    /** Gets the Apps which match the filter passed in. */\n    public get(filter?: IGetAppsFilter): Array<ProxiedApp> {\n        let rls: Array<ProxiedApp> = [];\n\n        if (typeof filter === 'undefined') {\n            this.apps.forEach((rl) => rls.push(rl));\n\n            return rls;\n        }\n\n        let nothing = true;\n\n        if (typeof filter.enabled === 'boolean' && filter.enabled) {\n            this.apps.forEach((rl) => {\n                if (AppStatusUtils.isEnabled(rl.getStatus())) {\n                    rls.push(rl);\n                }\n            });\n            nothing = false;\n        }\n\n        if (typeof filter.disabled === 'boolean' && filter.disabled) {\n            this.apps.forEach((rl) => {\n                if (AppStatusUtils.isDisabled(rl.getStatus())) {\n                    rls.push(rl);\n                }\n            });\n            nothing = false;\n        }\n\n        if (nothing) {\n            this.apps.forEach((rl) => rls.push(rl));\n        }\n\n        if (typeof filter.ids !== 'undefined') {\n            rls = rls.filter((rl) => filter.ids.includes(rl.getID()));\n        }\n\n        if (typeof filter.name === 'string') {\n            rls = rls.filter((rl) => rl.getName() === filter.name);\n        } else if (filter.name instanceof RegExp) {\n            rls = rls.filter((rl) => (filter.name as RegExp).test(rl.getName()));\n        }\n\n        return rls;\n    }\n\n    /** Gets a single App by the id passed in. */\n    public getOneById(appId: string): ProxiedApp {\n        return this.apps.get(appId);\n    }\n\n    public getPermissionsById(appId: string): Array<IPermission> {\n        const app = this.apps.get(appId);\n\n        if (!app) {\n            return [];\n        }\n        const { permissionsGranted } = app.getStorageItem();\n\n        return permissionsGranted || defaultPermissions;\n    }\n\n    public async enable(id: string): Promise<boolean> {\n        const rl = this.apps.get(id);\n\n        if (!rl) {\n            throw new Error(`No App by the id \"${id}\" exists.`);\n        }\n\n        if (AppStatusUtils.isEnabled(rl.getStatus())) {\n            return true;\n        }\n\n        if (rl.getStatus() === AppStatus.COMPILER_ERROR_DISABLED) {\n            throw new Error('The App had compiler errors, can not enable it.');\n        }\n\n        const storageItem = await this.appMetadataStorage.retrieveOne(id);\n        if (!storageItem) {\n            throw new Error(`Could not enable an App with the id of \"${id}\" as it doesn't exist.`);\n        }\n\n        const isSetup = await this.runStartUpProcess(storageItem, rl, true, false);\n        if (isSetup) {\n            storageItem.status = rl.getStatus();\n            // This is async, but we don't care since it only updates in the database\n            // and it should not mutate any properties we care about\n            await this.appMetadataStorage.update(storageItem).catch();\n        }\n\n        return isSetup;\n    }\n\n    public async disable(id: string, status: AppStatus = AppStatus.DISABLED, silent?: boolean): Promise<boolean> {\n        if (!AppStatusUtils.isDisabled(status)) {\n            throw new Error('Invalid disabled status');\n        }\n\n        const app = this.apps.get(id);\n\n        if (!app) {\n            throw new Error(`No App by the id \"${id}\" exists.`);\n        }\n\n        if (AppStatusUtils.isEnabled(app.getStatus())) {\n            await app\n                .call(AppMethod.ONDISABLE, this.accessorManager.getConfigurationModify(app.getID()))\n                .catch((e) => console.warn('Error while disabling:', e));\n        }\n\n        await this.purgeAppConfig(app, { keepScheduledJobs: true });\n\n        await app.setStatus(status, silent);\n\n        const storageItem = await this.appMetadataStorage.retrieveOne(id);\n\n        app.getStorageItem().marketplaceInfo = storageItem.marketplaceInfo;\n        await app.validateLicense().catch();\n\n        // This is async, but we don't care since it only updates in the database\n        // and it should not mutate any properties we care about\n        storageItem.status = app.getStatus();\n        await this.appMetadataStorage.update(storageItem).catch();\n\n        return true;\n    }\n\n    public async addLocal(appId: string): Promise<void> {\n        const storageItem = await this.appMetadataStorage.retrieveOne(appId);\n\n        if (!storageItem) {\n            throw new Error(`App with id ${appId} couldn't be found`);\n        }\n\n        const appPackage = await this.appSourceStorage.fetch(storageItem);\n\n        if (!appPackage) {\n            throw new Error(`Package file for app \"${storageItem.info.name}\" (${appId}) couldn't be found`);\n        }\n\n        const parsedPackage = await this.getParser().unpackageApp(appPackage);\n        const app = await this.getCompiler().toSandBox(this, storageItem, parsedPackage);\n\n        this.apps.set(app.getID(), app);\n\n        await this.loadOne(appId);\n    }\n\n    public async add(appPackage: Buffer, installationParameters: IAppInstallParameters): Promise<AppFabricationFulfillment> {\n        const { enable = true, marketplaceInfo, permissionsGranted, user } = installationParameters;\n\n        const aff = new AppFabricationFulfillment();\n        const result = await this.getParser().unpackageApp(appPackage);\n        const undoSteps: Array<() => void> = [];\n\n        aff.setAppInfo(result.info);\n        aff.setImplementedInterfaces(result.implemented.getValues());\n\n        const descriptor: IAppStorageItem = {\n            id: result.info.id,\n            info: result.info,\n            status: AppStatus.UNKNOWN,\n            settings: {},\n            implemented: result.implemented.getValues(),\n            installationSource: marketplaceInfo ? AppInstallationSource.MARKETPLACE : AppInstallationSource.PRIVATE,\n            marketplaceInfo,\n            permissionsGranted,\n            languageContent: result.languageContent,\n        };\n\n        try {\n            descriptor.sourcePath = await this.appSourceStorage.store(descriptor, appPackage);\n\n            undoSteps.push(() => this.appSourceStorage.remove(descriptor));\n        } catch (error) {\n            aff.setStorageError('Failed to store app package');\n\n            return aff;\n        }\n\n        // Now that is has all been compiled, let's get the\n        // the App instance from the source.\n        const app = await this.getCompiler().toSandBox(this, descriptor, result);\n\n        // Create a user for the app\n        try {\n            await this.createAppUser(result.info);\n\n            undoSteps.push(() => this.removeAppUser(app));\n        } catch (err) {\n            aff.setAppUserError({\n                username: app.getAppUserUsername(),\n                message: 'Failed to create an app user for this app.',\n            });\n\n            await Promise.all(undoSteps.map((undoer) => undoer()));\n\n            return aff;\n        }\n\n        descriptor.signature = await this.getSignatureManager().signApp(descriptor);\n        const created = await this.appMetadataStorage.create(descriptor);\n\n        if (!created) {\n            aff.setStorageError('Failed to create the App, the storage did not return it.');\n\n            await Promise.all(undoSteps.map((undoer) => undoer()));\n\n            return aff;\n        }\n\n        this.apps.set(app.getID(), app);\n        aff.setApp(app);\n\n        // Let everyone know that the App has been added\n        await this.bridges\n            .getAppActivationBridge()\n            .doAppAdded(app)\n            .catch(() => {\n                // If an error occurs during this, oh well.\n            });\n\n        await this.installApp(created, app, user);\n\n        // Should enable === true, then we go through the entire start up process\n        // Otherwise, we only initialize it.\n        if (enable) {\n            // Start up the app\n            await this.runStartUpProcess(created, app, false, false);\n        } else {\n            await this.initializeApp(created, app, true);\n        }\n\n        return aff;\n    }\n\n    /**\n     * Uninstalls specified app from the server and remove\n     * all database records regarding it\n     *\n     * @returns the instance of the removed ProxiedApp\n     */\n    public async remove(id: string, uninstallationParameters: IAppUninstallParameters): Promise<ProxiedApp> {\n        const app = this.apps.get(id);\n        const { user } = uninstallationParameters;\n\n        // First remove the app\n        await this.uninstallApp(app, user);\n        await this.removeLocal(id);\n\n        // Then let everyone know that the App has been removed\n        await this.bridges.getAppActivationBridge().doAppRemoved(app).catch();\n\n        return app;\n    }\n\n    /**\n     * Removes the app instance from the local Apps container\n     * and every type of data associated with it\n     */\n    public async removeLocal(id: string): Promise<void> {\n        const app = this.apps.get(id);\n\n        if (AppStatusUtils.isEnabled(app.getStatus())) {\n            await this.disable(id);\n        }\n\n        await this.purgeAppConfig(app);\n        this.listenerManager.releaseEssentialEvents(app);\n        await this.removeAppUser(app);\n        await (this.bridges.getPersistenceBridge() as IInternalPersistenceBridge & PersistenceBridge).purge(app.getID());\n        await this.appMetadataStorage.remove(app.getID());\n        await this.appSourceStorage.remove(app.getStorageItem()).catch();\n\n        this.apps.delete(app.getID());\n    }\n\n    public async update(appPackage: Buffer, permissionsGranted: Array<IPermission>, updateOptions = { loadApp: true }): Promise<AppFabricationFulfillment> {\n        const aff = new AppFabricationFulfillment();\n        const result = await this.getParser().unpackageApp(appPackage);\n\n        aff.setAppInfo(result.info);\n        aff.setImplementedInterfaces(result.implemented.getValues());\n\n        const old = await this.appMetadataStorage.retrieveOne(result.info.id);\n\n        if (!old) {\n            throw new Error('Can not update an App that does not currently exist.');\n        }\n\n        // If there is any error during disabling, it doesn't really matter\n        await this.disable(old.id).catch(() => {});\n\n        const descriptor: IAppStorageItem = {\n            ...old,\n            createdAt: old.createdAt,\n            id: result.info.id,\n            info: result.info,\n            status: this.apps.get(old.id)?.getStatus() || old.status,\n            languageContent: result.languageContent,\n            settings: old.settings,\n            implemented: result.implemented.getValues(),\n            marketplaceInfo: old.marketplaceInfo,\n            sourcePath: old.sourcePath,\n            permissionsGranted,\n        };\n\n        try {\n            descriptor.sourcePath = await this.appSourceStorage.update(descriptor, appPackage);\n        } catch (error) {\n            aff.setStorageError('Failed to storage app package');\n\n            return aff;\n        }\n\n        descriptor.signature = await this.signatureManager.signApp(descriptor);\n        const stored = await this.appMetadataStorage.update(descriptor);\n\n        const app = await this.getCompiler().toSandBox(this, descriptor, result);\n\n        // Ensure there is an user for the app\n        try {\n            await this.createAppUser(result.info);\n        } catch (err) {\n            aff.setAppUserError({\n                username: `${result.info.nameSlug}.bot`,\n                message: 'Failed to create an app user for this app.',\n            });\n\n            return aff;\n        }\n\n        aff.setApp(app);\n\n        if (updateOptions.loadApp) {\n            await this.updateLocal(stored, app);\n\n            await this.bridges\n                .getAppActivationBridge()\n                .doAppUpdated(app)\n                .catch(() => {});\n        }\n\n        return aff;\n    }\n\n    /**\n     * Updates the local instance of an app.\n     *\n     * If the second parameter is a Buffer of an app package,\n     * unpackage and instantiate the app's main class\n     *\n     * With an instance of a ProxiedApp, start it up and replace\n     * the reference in the local app collection\n     */\n    public async updateLocal(stored: IAppStorageItem, appPackageOrInstance: ProxiedApp | Buffer) {\n        const app = await (async () => {\n            if (appPackageOrInstance instanceof Buffer) {\n                const parseResult = await this.getParser().unpackageApp(appPackageOrInstance);\n\n                return this.getCompiler().toSandBox(this, stored, parseResult);\n            }\n\n            return appPackageOrInstance;\n        })();\n\n        await this.purgeAppConfig(app, { keepScheduledJobs: true });\n\n        this.apps.set(app.getID(), app);\n\n        await this.runStartUpProcess(stored, app, false, true);\n    }\n\n    public getLanguageContent(): { [key: string]: object } {\n        const langs: { [key: string]: object } = {};\n\n        this.apps.forEach((rl) => {\n            const content = rl.getStorageItem().languageContent;\n\n            Object.keys(content).forEach((key) => {\n                langs[key] = Object.assign(langs[key] || {}, content[key]);\n            });\n        });\n\n        return langs;\n    }\n\n    public async changeStatus(appId: string, status: AppStatus): Promise<ProxiedApp> {\n        switch (status) {\n            case AppStatus.MANUALLY_DISABLED:\n            case AppStatus.MANUALLY_ENABLED:\n                break;\n            default:\n                throw new Error('Invalid status to change an App to, must be manually disabled or enabled.');\n        }\n\n        const rl = this.apps.get(appId);\n\n        if (!rl) {\n            throw new Error('Can not change the status of an App which does not currently exist.');\n        }\n\n        if (AppStatusUtils.isEnabled(status)) {\n            // Then enable it\n            if (AppStatusUtils.isEnabled(rl.getStatus())) {\n                throw new Error('Can not enable an App which is already enabled.');\n            }\n\n            await this.enable(rl.getID());\n        } else {\n            if (!AppStatusUtils.isEnabled(rl.getStatus())) {\n                throw new Error('Can not disable an App which is not enabled.');\n            }\n\n            await this.disable(rl.getID(), AppStatus.MANUALLY_DISABLED);\n        }\n\n        return rl;\n    }\n\n    public async updateAppsMarketplaceInfo(appsOverview: Array<{ latest: IMarketplaceInfo }>): Promise<void> {\n        await Promise.all(\n            appsOverview.map(async ({ latest: appInfo }) => {\n                if (!appInfo.subscriptionInfo) {\n                    return;\n                }\n\n                const app = this.apps.get(appInfo.id);\n\n                if (!app) {\n                    return;\n                }\n\n                const appStorageItem = app.getStorageItem();\n                const subscriptionInfo = appStorageItem.marketplaceInfo && appStorageItem.marketplaceInfo.subscriptionInfo;\n\n                if (subscriptionInfo && subscriptionInfo.license.license === appInfo.subscriptionInfo.license.license) {\n                    return;\n                }\n\n                appStorageItem.marketplaceInfo.subscriptionInfo = appInfo.subscriptionInfo;\n\n                return this.appMetadataStorage.update(appStorageItem);\n            }),\n        ).catch();\n\n        const queue = [] as Array<Promise<void>>;\n\n        this.apps.forEach((app) =>\n            queue.push(\n                app\n                    .validateLicense()\n                    .then(() => {\n                        if (app.getStatus() !== AppStatus.INVALID_LICENSE_DISABLED) {\n                            return;\n                        }\n\n                        return app.setStatus(AppStatus.DISABLED);\n                    })\n                    .catch(async (error) => {\n                        if (!(error instanceof InvalidLicenseError)) {\n                            console.error(error);\n                            return;\n                        }\n\n                        await this.purgeAppConfig(app);\n\n                        return app.setStatus(AppStatus.INVALID_LICENSE_DISABLED);\n                    })\n                    .then(() => {\n                        if (app.getStatus() === app.getPreviousStatus()) {\n                            return;\n                        }\n\n                        const storageItem = app.getStorageItem();\n                        storageItem.status = app.getStatus();\n\n                        return this.appMetadataStorage.update(storageItem).catch(console.error) as Promise<void>;\n                    }),\n            ),\n        );\n\n        await Promise.all(queue);\n    }\n\n    /**\n     * Goes through the entire loading up process.\n     *\n     * @param appId the id of the application to load\n     */\n    public async loadOne(appId: string): Promise<ProxiedApp> {\n        const rl = this.apps.get(appId);\n\n        if (!rl) {\n            throw new Error(`No App found by the id of: \"${appId}\"`);\n        }\n\n        const item = rl.getStorageItem();\n\n        await this.initializeApp(item, rl, false);\n\n        if (!this.areRequiredSettingsSet(item)) {\n            await rl.setStatus(AppStatus.INVALID_SETTINGS_DISABLED);\n        }\n\n        if (!AppStatusUtils.isDisabled(rl.getStatus()) && AppStatusUtils.isEnabled(rl.getPreviousStatus())) {\n            await this.enableApp(item, rl, false, rl.getPreviousStatus() === AppStatus.MANUALLY_ENABLED);\n        }\n\n        return this.apps.get(item.id);\n    }\n\n    private async runStartUpProcess(storageItem: IAppStorageItem, app: ProxiedApp, isManual: boolean, silenceStatus: boolean): Promise<boolean> {\n        if (app.getStatus() !== AppStatus.INITIALIZED) {\n            const isInitialized = await this.initializeApp(storageItem, app, true, silenceStatus);\n            if (!isInitialized) {\n                return false;\n            }\n        }\n\n        if (!this.areRequiredSettingsSet(storageItem)) {\n            await app.setStatus(AppStatus.INVALID_SETTINGS_DISABLED, silenceStatus);\n            return false;\n        }\n\n        return this.enableApp(storageItem, app, true, isManual, silenceStatus);\n    }\n\n    private async installApp(storageItem: IAppStorageItem, app: ProxiedApp, user: IUser): Promise<boolean> {\n        let result: boolean;\n        const read = this.getAccessorManager().getReader(storageItem.id);\n        const http = this.getAccessorManager().getHttp(storageItem.id);\n        const persistence = this.getAccessorManager().getPersistence(storageItem.id);\n        const modifier = this.getAccessorManager().getModifier(storageItem.id);\n        const context = { user };\n\n        try {\n            await app.call(AppMethod.ONINSTALL, context, read, http, persistence, modifier);\n\n            result = true;\n        } catch (e) {\n            const status = AppStatus.ERROR_DISABLED;\n\n            if (e.name === 'NotEnoughMethodArgumentsError') {\n                app.getLogger().warn('Please report the following error:');\n            }\n\n            result = false;\n\n            await app.setStatus(status);\n        }\n\n        return result;\n    }\n\n    private async initializeApp(storageItem: IAppStorageItem, app: ProxiedApp, saveToDb = true, silenceStatus = false): Promise<boolean> {\n        let result: boolean;\n        const configExtend = this.getAccessorManager().getConfigurationExtend(storageItem.id);\n        const envRead = this.getAccessorManager().getEnvironmentRead(storageItem.id);\n\n        try {\n            await app.validateLicense();\n            await app.validateInstallation();\n\n            await app.call(AppMethod.INITIALIZE, configExtend, envRead);\n            await app.setStatus(AppStatus.INITIALIZED, silenceStatus);\n\n            result = true;\n        } catch (e) {\n            let status = AppStatus.ERROR_DISABLED;\n\n            if (e.name === 'NotEnoughMethodArgumentsError') {\n                console.warn('Please report the following error:');\n            }\n\n            if (e instanceof InvalidLicenseError) {\n                status = AppStatus.INVALID_LICENSE_DISABLED;\n            }\n\n            if (e instanceof InvalidInstallationError) {\n                status = AppStatus.INVALID_INSTALLATION_DISABLED;\n            }\n\n            await this.purgeAppConfig(app);\n            result = false;\n\n            await app.setStatus(status, silenceStatus);\n        }\n\n        if (saveToDb) {\n            // This is async, but we don't care since it only updates in the database\n            // and it should not mutate any properties we care about\n            storageItem.status = app.getStatus();\n            await this.appMetadataStorage.update(storageItem).catch();\n        }\n\n        return result;\n    }\n\n    private async purgeAppConfig(app: ProxiedApp, opts: IPurgeAppConfigOpts = {}) {\n        if (!opts.keepScheduledJobs) {\n            await this.schedulerManager.cleanUp(app.getID());\n        }\n        this.listenerManager.unregisterListeners(app);\n        this.listenerManager.lockEssentialEvents(app);\n        await this.commandManager.unregisterCommands(app.getID());\n        this.externalComponentManager.unregisterExternalComponents(app.getID());\n        await this.apiManager.unregisterApis(app.getID());\n        this.accessorManager.purifyApp(app.getID());\n        this.uiActionButtonManager.clearAppActionButtons(app.getID());\n        this.videoConfProviderManager.unregisterProviders(app.getID());\n    }\n\n    /**\n     * Determines if the App's required settings are set or not.\n     * Should a packageValue be provided and not empty, then it's considered set.\n     */\n    private areRequiredSettingsSet(storageItem: IAppStorageItem): boolean {\n        let result = true;\n\n        for (const setk of Object.keys(storageItem.settings)) {\n            const sett = storageItem.settings[setk];\n            // If it's not required, ignore\n            if (!sett.required) {\n                continue;\n            }\n\n            if (sett.value !== 'undefined' || sett.packageValue !== 'undefined') {\n                continue;\n            }\n\n            result = false;\n        }\n\n        return result;\n    }\n\n    private async enableApp(storageItem: IAppStorageItem, app: ProxiedApp, saveToDb = true, isManual: boolean, silenceStatus = false): Promise<boolean> {\n        let enable: boolean;\n        let status = AppStatus.ERROR_DISABLED;\n\n        try {\n            await app.validateLicense();\n            await app.validateInstallation();\n\n            enable = (await app.call(\n                AppMethod.ONENABLE,\n                this.getAccessorManager().getEnvironmentRead(storageItem.id),\n                this.getAccessorManager().getConfigurationModify(storageItem.id),\n            )) as boolean;\n\n            if (enable) {\n                status = isManual ? AppStatus.MANUALLY_ENABLED : AppStatus.AUTO_ENABLED;\n            } else {\n                status = AppStatus.DISABLED;\n                app.getLogger().warn(`The App (${app.getID()}) disabled itself when being enabled. \\nCheck the \"onEnable\" implementation for details.`);\n            }\n        } catch (e) {\n            enable = false;\n\n            if (e.name === 'NotEnoughMethodArgumentsError') {\n                console.warn('Please report the following error:');\n            }\n\n            if (e instanceof InvalidLicenseError) {\n                status = AppStatus.INVALID_LICENSE_DISABLED;\n            }\n\n            if (e instanceof InvalidInstallationError) {\n                status = AppStatus.INVALID_INSTALLATION_DISABLED;\n            }\n\n            console.error(e);\n        }\n\n        if (enable) {\n            await this.commandManager.registerCommands(app.getID());\n            this.externalComponentManager.registerExternalComponents(app.getID());\n            await this.apiManager.registerApis(app.getID());\n            this.listenerManager.registerListeners(app);\n            this.listenerManager.releaseEssentialEvents(app);\n            this.videoConfProviderManager.registerProviders(app.getID());\n        } else {\n            await this.purgeAppConfig(app);\n        }\n\n        if (saveToDb) {\n            storageItem.status = status;\n            // This is async, but we don't care since it only updates in the database\n            // and it should not mutate any properties we care about\n            await this.appMetadataStorage.update(storageItem).catch();\n        }\n\n        await app.setStatus(status, silenceStatus);\n\n        return enable;\n    }\n\n    private async createAppUser(appInfo: IAppInfo): Promise<string> {\n        const appUser = await (this.bridges.getUserBridge() as IInternalUserBridge & UserBridge).getAppUser(appInfo.id);\n\n        if (appUser) {\n            return appUser.id;\n        }\n\n        const userData: Partial<IUser> = {\n            username: `${appInfo.nameSlug}.bot`,\n            name: appInfo.name,\n            roles: ['app'],\n            appId: appInfo.id,\n            type: UserType.APP,\n            status: 'online',\n            isEnabled: true,\n        };\n\n        return (this.bridges.getUserBridge() as IInternalUserBridge & UserBridge).create(userData, appInfo.id, {\n            avatarUrl: appInfo.iconFileContent || appInfo.iconFile,\n            joinDefaultChannels: true,\n            sendWelcomeEmail: false,\n        });\n    }\n\n    private async removeAppUser(app: ProxiedApp): Promise<boolean> {\n        const appUser = await (this.bridges.getUserBridge() as IInternalUserBridge & UserBridge).getAppUser(app.getID());\n\n        if (!appUser) {\n            return true;\n        }\n\n        return (this.bridges.getUserBridge() as IInternalUserBridge & UserBridge).remove(appUser, app.getID());\n    }\n\n    private async uninstallApp(app: ProxiedApp, user: IUser): Promise<boolean> {\n        let result: boolean;\n        const read = this.getAccessorManager().getReader(app.getID());\n        const http = this.getAccessorManager().getHttp(app.getID());\n        const persistence = this.getAccessorManager().getPersistence(app.getID());\n        const modifier = this.getAccessorManager().getModifier(app.getID());\n        const context = { user };\n\n        try {\n            await app.call(AppMethod.ONUNINSTALL, context, read, http, persistence, modifier);\n\n            result = true;\n        } catch (e) {\n            const status = AppStatus.ERROR_DISABLED;\n\n            if (e.name === 'NotEnoughMethodArgumentsError') {\n                app.getLogger().warn('Please report the following error:');\n            }\n\n            result = false;\n\n            await app.setStatus(status);\n        }\n\n        return result;\n    }\n}\n\nexport const getPermissionsByAppId = (appId: string) => {\n    if (!AppManager.Instance) {\n        console.error('AppManager should be instantiated first');\n        return [];\n    }\n    return AppManager.Instance.getPermissionsById(appId);\n};\n"]}