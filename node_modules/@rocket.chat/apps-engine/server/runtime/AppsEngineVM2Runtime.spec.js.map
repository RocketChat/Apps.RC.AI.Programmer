{"version":3,"sources":["src/server/runtime/AppsEngineVM2Runtime.spec.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,uCAA+F;AAG/F,iEAA8D;AAGvD,IAAM,+BAA+B,6CAArC,MAAM,+BAA+B;IAArC;QACK,QAAG,GAAG;YACV,OAAO,EAAE,GAAG,EAAE,CAAC,UAAU;SAC5B,CAAC;IAqEN,CAAC;IAlEU,YAAY,KAAI,CAAC;IAGjB,KAAK,KAAI,CAAC;IAyBV,WAAW,CAAC,GAAG,IAAS;QAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACrB,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAEzB,MAAM,MAAM,GAAG,2CAAoB,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QAEpE,IAAI,MAAM,EAAE;YACR,IAAI,MAAM,YAAY,QAAQ,EAAE;gBAC5B,IAAA,iBAAM,EAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACnC;SACJ;IACL,CAAC;IAaY,YAAY,CAAC,GAAG,IAAS;;YAClC,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAEzB,MAAM,QAAQ,GAAG,IAAI,2CAAoB,CAAC,IAAI,CAAC,GAAU,EAAE,CAAC,GAAW,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;YAEjF,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;YAEnE,IAAA,iBAAM,EAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpC,CAAC;KAAA;CACJ,CAAA;AAlEU;IADN,uBAAY;;;;mEACW;AAGjB;IADN,gBAAK;;;;4DACW;AAyBV;IAvBN,IAAA,mBAAQ,EACL,4DAA4D,EAC5D,EAAE,WAAW,EAAE,IAAI,EAAE,EACrB;QACI,OAAO,EAAE,EAAE;QACX,QAAQ,EAAE,aAAa;QACvB,gBAAgB,EAAE,IAAI;KACzB,EACD,wBAAwB,CAC3B;IACA,IAAA,mBAAQ,EACL,yEAAyE,EACzE,IAAI,EACJ;QACI,OAAO,EAAE,EAAE;QACX,gBAAgB,EAAE,KAAK;KAC1B,EACD,yBAAyB,CAC5B;IACA,IAAA,mBAAQ,EAAC,4DAA4D,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,wBAAwB,CAAC;IAC7H,IAAA,mBAAQ,EAAC,6DAA6D,EAAE,IAAI,EAAE,IAAI,CAAC;IACnF,IAAA,mBAAQ,EAAC,4DAA4D,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,yBAAyB,CAAC;IACpI,IAAA,eAAI,EAAC,8BAA8B,CAAC;;;;kEAcpC;AAaY;IAXZ,IAAA,mBAAQ,EACL,iDAAiD,EACjD,EAAE,WAAW,EAAE,IAAI,EAAE,EACrB;QACI,OAAO,EAAE,EAAE;QACX,QAAQ,EAAE,aAAa;QACvB,gBAAgB,EAAE,IAAI;KACzB,EACD,aAAa,CAChB;IACA,IAAA,oBAAS,EAAC,iEAAiE,CAAC;;;;mEAY5E;0CAvEQ,+BAA+B;IAD3C,IAAA,sBAAW,EAAC,sBAAsB,CAAC;GACvB,+BAA+B,CAwE3C","file":"AppsEngineVM2Runtime.spec.js","sourcesContent":["import { AsyncTest, Expect, Setup, SetupFixture, Test, TestCase, TestFixture } from 'alsatian';\n\nimport type { App } from '../../definition/App';\nimport { AppsEngineVM2Runtime } from './AppsEngineVM2Runtime';\n\n@TestFixture('AppsEngineVM2Runtine')\nexport class AppsEngineVM2RuntineTestFixture {\n    private app = {\n        getName: () => 'app-name',\n    };\n\n    @SetupFixture\n    public setupFixture() {}\n\n    @Setup\n    public setup() {}\n\n    @TestCase(\n        `module.exports = () => { return 'Hello World First case'};`,\n        { someSandbox: true },\n        {\n            timeout: 10,\n            filename: 'filename.ts',\n            returnAllExports: true,\n        },\n        'Hello World First case',\n    )\n    @TestCase(\n        `module.exports = { method: () => { return 'Hello World Second case' } }`,\n        null,\n        {\n            timeout: 10,\n            returnAllExports: false,\n        },\n        'Hello World Second case',\n    )\n    @TestCase(`module.exports = () => { return 'Hello World Third case'};`, { someSandbox: true }, null, 'Hello World Third case')\n    @TestCase(`module.exports = () => { return 'Hello World Fourth case'};`, null, null)\n    @TestCase(`module.exports = () => { return 'Hello World Fifth case'};`, { require: () => 'module' }, null, 'Hello World Fourth case')\n    @Test('AppsEngineVM2Runtime.runCode')\n    public runCodeTest(...args: any) {\n        const code = args[0];\n        const sandbox = args[1];\n        const options = args[2];\n        const response = args[3];\n\n        const result = AppsEngineVM2Runtime.runCode(code, sandbox, options);\n\n        if (result) {\n            if (result instanceof Function) {\n                Expect(result()).toBe(response);\n            }\n        }\n    }\n\n    @TestCase(\n        `module.exports = () => { return 'Hello World'};`,\n        { someSandbox: true },\n        {\n            timeout: 10,\n            filename: 'filename.ts',\n            returnAllExports: true,\n        },\n        'Hello World',\n    )\n    @AsyncTest('new AppsEngineVM2Runtime().runInSandbox(code, sandbox, options)')\n    public async runInSandbox(...args: any) {\n        const code = args[0];\n        const sandbox = args[1];\n        const options = args[2];\n        const response = args[3];\n\n        const instance = new AppsEngineVM2Runtime(this.app as App, (mod: string) => mod);\n\n        const result = await instance.runInSandbox(code, sandbox, options);\n\n        Expect(result()).toBe(response);\n    }\n}\n"]}