{"version":3,"sources":["src/server/runtime/AppsEngineNodeRuntime.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iCAAiC;AACjC,yBAAyB;AAIzB,2DAAgH;AAEhH,MAAa,qBAAsB,SAAQ,qCAAiB;IAajD,MAAM,CAAO,OAAO,CAAC,IAAY,EAAE,OAA6B,EAAE,OAAmC;;YACxG,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACnC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE;oBAClB,IAAI;wBACA,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;qBACrD;oBAAC,OAAO,CAAC,EAAE;wBACR,MAAM,CAAC,CAAC,CAAC,CAAC;qBACb;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;IAEM,MAAM,CAAC,WAAW,CAAC,IAAY,EAAE,OAA6B,EAAE,OAAmC;QACtG,OAAO,EAAE,CAAC,eAAe,CACrB,IAAI,kCACC,qBAAqB,CAAC,cAAc,GAAK,OAAO,mCAChD,qBAAqB,CAAC,qBAAqB,GAAK,CAAC,OAAO,IAAI,EAAE,CAAC,EACvE,CAAC;IACN,CAAC;IAED,YAA6B,GAAQ,EAAmB,aAAmC;QACvF,KAAK,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;QADD,QAAG,GAAH,GAAG,CAAK;QAAmB,kBAAa,GAAb,aAAa,CAAsB;IAE3F,CAAC;IAEY,YAAY,CAAC,IAAY,EAAE,OAA6B,EAAE,OAAmC;;YACtG,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACnC,OAAO,CAAC,QAAQ,CAAC,GAAS,EAAE;oBACxB,IAAI;wBACA,OAAO,aAAP,OAAO,cAAP,OAAO,IAAP,OAAO,GAAK,EAAE,EAAC;wBAEf,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,eAAe,CACnC,IAAI,gDAEG,qBAAqB,CAAC,cAAc,GACpC,OAAO,KACV,OAAO,EAAE,IAAI,CAAC,aAAa,qCAGxB,qBAAqB,CAAC,qBAAqB,KAC9C,QAAQ,EAAE,IAAA,qCAAiB,EAAC,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,KAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,IAE3E,CAAC;wBAEF,OAAO,CAAC,MAAM,CAAC,CAAC;qBACnB;oBAAC,OAAO,CAAC,EAAE;wBACR,MAAM,CAAC,CAAC,CAAC,CAAC;qBACb;gBACL,CAAC,CAAA,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;;AA9DL,sDA+DC;AA9DiB,2CAAqB,GAAG;IAClC,OAAO,EAAE,uDAAmC;CAC/C,CAAC;AAEY,oCAAc,mCACrB,MAAM,KACT,MAAM;IACN,OAAO,EACP,OAAO,EAAE,EAAE,EACX,OAAO,EAAE,EAAE,IACb","file":"AppsEngineNodeRuntime.js","sourcesContent":["import * as timers from 'timers';\nimport * as vm from 'vm';\n\nimport type { App } from '../../definition/App';\nimport type { IAppsEngineRuntimeOptions } from './AppsEngineRuntime';\nimport { APPS_ENGINE_RUNTIME_DEFAULT_TIMEOUT, AppsEngineRuntime, getFilenameForApp } from './AppsEngineRuntime';\n\nexport class AppsEngineNodeRuntime extends AppsEngineRuntime {\n    public static defaultRuntimeOptions = {\n        timeout: APPS_ENGINE_RUNTIME_DEFAULT_TIMEOUT,\n    };\n\n    public static defaultContext = {\n        ...timers,\n        Buffer,\n        console,\n        process: {},\n        exports: {},\n    };\n\n    public static async runCode(code: string, sandbox?: Record<string, any>, options?: IAppsEngineRuntimeOptions): Promise<any> {\n        return new Promise((resolve, reject) => {\n            process.nextTick(() => {\n                try {\n                    resolve(this.runCodeSync(code, sandbox, options));\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n\n    public static runCodeSync(code: string, sandbox?: Record<string, any>, options?: IAppsEngineRuntimeOptions): any {\n        return vm.runInNewContext(\n            code,\n            { ...AppsEngineNodeRuntime.defaultContext, ...sandbox },\n            { ...AppsEngineNodeRuntime.defaultRuntimeOptions, ...(options || {}) },\n        );\n    }\n\n    constructor(private readonly app: App, private readonly customRequire: (mod: string) => any) {\n        super(app, customRequire);\n    }\n\n    public async runInSandbox(code: string, sandbox?: Record<string, any>, options?: IAppsEngineRuntimeOptions): Promise<any> {\n        return new Promise((resolve, reject) => {\n            process.nextTick(async () => {\n                try {\n                    sandbox ??= {};\n\n                    const result = await vm.runInNewContext(\n                        code,\n                        {\n                            ...AppsEngineNodeRuntime.defaultContext,\n                            ...sandbox,\n                            require: this.customRequire,\n                        },\n                        {\n                            ...AppsEngineNodeRuntime.defaultRuntimeOptions,\n                            filename: getFilenameForApp(options?.filename || this.app.getName()),\n                        },\n                    );\n\n                    resolve(result);\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n}\n"]}