{"version":3,"sources":["src/server/oauth2/OAuth2Client.ts"],"names":[],"mappings":"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","file":"OAuth2Client.js","sourcesContent":["import { URL } from 'url';\n\nimport type { IConfigurationExtend, IHttp, IModify, IPersistence, IRead } from '../../definition/accessors';\nimport { HttpStatusCode } from '../../definition/accessors';\nimport type { IApiEndpointInfo, IApiRequest, IApiResponse } from '../../definition/api';\nimport { ApiSecurity, ApiVisibility } from '../../definition/api';\nimport type { App } from '../../definition/App';\nimport { RocketChatAssociationModel, RocketChatAssociationRecord } from '../../definition/metadata';\nimport type { IAuthData, IOAuth2Client, IOAuth2ClientOptions } from '../../definition/oauth2/IOAuth2';\nimport { SettingType } from '../../definition/settings';\nimport type { IUser } from '../../definition/users';\n\nexport enum GrantType {\n    RefreshToken = 'refresh_token',\n    AuthorizationCode = 'authorization_code',\n}\n\nexport class OAuth2Client implements IOAuth2Client {\n    private defaultContents = {\n        success: `<div style=\"display: flex;align-items: center;justify-content: center; height: 100%;\">\\\n                        <h1 style=\"text-align: center; font-family: Helvetica Neue;\">\\\n                            Authorization went successfully<br>\\\n                            You can close this tab now<br>\\\n                        </h1>\\\n                    </div>`,\n        failed: `<div style=\"display: flex;align-items: center;justify-content: center; height: 100%;\">\\\n                    <h1 style=\"text-align: center; font-family: Helvetica Neue;\">\\\n                        Oops, something went wrong, please try again or in case it still does not work, contact the administrator.\\\n                    </h1>\\\n                </div>`,\n    };\n\n    constructor(private readonly app: App, private readonly config: IOAuth2ClientOptions) {}\n\n    public async setup(configuration: IConfigurationExtend): Promise<void> {\n        configuration.api.provideApi({\n            security: ApiSecurity.UNSECURE,\n            visibility: ApiVisibility.PUBLIC,\n            endpoints: [\n                {\n                    path: `${this.config.alias}-callback`,\n                    get: this.handleOAuthCallback.bind(this),\n                },\n            ],\n        });\n\n        await Promise.all([\n            configuration.settings.provideSetting({\n                id: `${this.config.alias}-oauth-client-id`,\n                type: SettingType.STRING,\n                public: true,\n                required: true,\n                packageValue: '',\n                i18nLabel: `${this.config.alias}-oauth-client-id`,\n            }),\n\n            configuration.settings.provideSetting({\n                id: `${this.config.alias}-oauth-clientsecret`,\n                type: SettingType.STRING,\n                public: true,\n                required: true,\n                packageValue: '',\n                i18nLabel: `${this.config.alias}-oauth-client-secret`,\n            }),\n        ]);\n    }\n\n    public async getUserAuthorizationUrl(user: IUser, scopes?: Array<string>): Promise<URL> {\n        const redirectUri = this.app.getAccessors().providedApiEndpoints[0].computedPath.substring(1);\n\n        const siteUrl = await this.getBaseURLWithoutTrailingSlash();\n\n        const finalScopes = ([] as Array<string>).concat(this.config.defaultScopes || [], scopes || []);\n\n        const { authUri } = this.config;\n\n        const clientId = await this.app.getAccessors().reader.getEnvironmentReader().getSettings().getValueById(`${this.config.alias}-oauth-client-id`);\n\n        const url = new URL(authUri, siteUrl);\n\n        url.searchParams.set('response_type', 'code');\n        url.searchParams.set('redirect_uri', `${siteUrl}/${redirectUri}`);\n        url.searchParams.set('state', user.id);\n        url.searchParams.set('client_id', clientId);\n        url.searchParams.set('access_type', 'offline');\n\n        if (finalScopes.length > 0) {\n            url.searchParams.set('scope', finalScopes.join(' '));\n        }\n\n        return url;\n    }\n\n    public async getAccessTokenForUser(user: IUser): Promise<IAuthData | undefined> {\n        const associations = [\n            new RocketChatAssociationRecord(RocketChatAssociationModel.USER, user.id),\n            new RocketChatAssociationRecord(RocketChatAssociationModel.MISC, `${this.config.alias}-oauth-connection`),\n        ];\n\n        const [result] = (await this.app.getAccessors().reader.getPersistenceReader().readByAssociations(associations)) as unknown as Array<\n            IAuthData | undefined\n        >;\n\n        return result;\n    }\n\n    public async refreshUserAccessToken(user: IUser, persis: IPersistence): Promise<IAuthData | undefined> {\n        try {\n            const tokenInfo = await this.getAccessTokenForUser(user);\n\n            if (!tokenInfo) {\n                throw new Error('User has no access token information');\n            }\n\n            if (!tokenInfo.refreshToken) {\n                throw new Error('User token information has no refresh token available');\n            }\n\n            const {\n                config: { refreshTokenUri },\n            } = this;\n\n            const clientId = await this.app.getAccessors().reader.getEnvironmentReader().getSettings().getValueById(`${this.config.alias}-oauth-client-id`);\n\n            const clientSecret = await this.app\n                .getAccessors()\n                .reader.getEnvironmentReader()\n                .getSettings()\n                .getValueById(`${this.config.alias}-oauth-clientsecret`);\n\n            const siteUrl = await this.getBaseURLWithoutTrailingSlash();\n\n            const redirectUri = this.app.getAccessors().providedApiEndpoints[0].computedPath.substring(1);\n\n            const url = new URL(refreshTokenUri);\n\n            url.searchParams.set('client_id', clientId);\n            url.searchParams.set('client_secret', clientSecret);\n            url.searchParams.set('redirect_uri', `${siteUrl}/${redirectUri}`);\n            url.searchParams.set('refresh_token', tokenInfo.refreshToken);\n            url.searchParams.set('grant_type', GrantType.RefreshToken);\n\n            const { content, statusCode } = await this.app.getAccessors().http.post(url.href);\n\n            if (statusCode !== 200) {\n                throw new Error('Request to provider was unsuccessful. Check logs for more information');\n            }\n\n            const { access_token, expires_in, refresh_token, scope } = JSON.parse(content as string);\n\n            if (!access_token) {\n                throw new Error('No access token returned by the provider');\n            }\n\n            const authData: IAuthData = {\n                scope,\n                token: access_token,\n                expiresAt: expires_in,\n                refreshToken: refresh_token || tokenInfo.refreshToken,\n            };\n\n            await this.saveToken(authData, user.id, persis);\n\n            return authData;\n        } catch (error) {\n            this.app.getLogger().error(error);\n            throw error;\n        }\n    }\n\n    public async revokeUserAccessToken(user: IUser, persis: IPersistence): Promise<boolean> {\n        try {\n            const tokenInfo = await this.getAccessTokenForUser(user);\n\n            if (!tokenInfo?.token) {\n                throw new Error('No access token available for this user.');\n            }\n\n            const url = new URL(this.config.revokeTokenUri);\n\n            url.searchParams.set('token', tokenInfo?.token);\n\n            const result = await this.app.getAccessors().http.post(url.href);\n\n            if (result.statusCode !== 200) {\n                throw new Error('Provider did not allow token to be revoked');\n            }\n\n            await this.removeToken({ userId: user.id, persis });\n\n            return true;\n        } catch (error) {\n            this.app.getLogger().error(error);\n            return false;\n        }\n    }\n\n    private async getBaseURLWithoutTrailingSlash(): Promise<string> {\n        const SITE_URL = 'Site_Url';\n        const url = await this.app.getAccessors().environmentReader.getServerSettings().getValueById(SITE_URL);\n\n        if (url.endsWith('/')) {\n            return url.substr(0, url.length - 1);\n        }\n        return url;\n    }\n\n    private async handleOAuthCallback(\n        request: IApiRequest,\n        endpoint: IApiEndpointInfo,\n        read: IRead,\n        modify: IModify,\n        http: IHttp,\n        persis: IPersistence,\n    ): Promise<IApiResponse> {\n        try {\n            const {\n                query: { code, state },\n            } = request;\n\n            const user = await this.app.getAccessors().reader.getUserReader().getById(state);\n\n            if (!user) {\n                throw new Error('User could not be determined.');\n            }\n\n            // User chose not to authorize the access\n            if (!code) {\n                const failedResult = await this.config.authorizationCallback?.(undefined, user, read, modify, http, persis);\n\n                return {\n                    status: HttpStatusCode.UNAUTHORIZED,\n                    content: failedResult?.responseContent || this.defaultContents.failed,\n                };\n            }\n\n            const siteUrl = await this.getBaseURLWithoutTrailingSlash();\n\n            const accessTokenUrl = this.config.accessTokenUri;\n\n            const redirectUri = this.app.getAccessors().providedApiEndpoints[0].computedPath.substring(1);\n\n            const clientId = await this.app.getAccessors().reader.getEnvironmentReader().getSettings().getValueById(`${this.config.alias}-oauth-client-id`);\n\n            const clientSecret = await this.app\n                .getAccessors()\n                .reader.getEnvironmentReader()\n                .getSettings()\n                .getValueById(`${this.config.alias}-oauth-clientsecret`);\n\n            const url = new URL(accessTokenUrl, siteUrl);\n\n            url.searchParams.set('client_id', clientId);\n            url.searchParams.set('redirect_uri', `${siteUrl}/${redirectUri}`);\n            url.searchParams.set('code', code);\n            url.searchParams.set('client_secret', clientSecret);\n            url.searchParams.set('access_type', 'offline');\n            url.searchParams.set('grant_type', GrantType.AuthorizationCode);\n\n            const { content, statusCode } = await http.post(url.href, {\n                headers: { Accept: 'application/json' },\n            });\n\n            // If provider had a server error, nothing we can do\n            if (statusCode >= 500) {\n                throw new Error('Request for access token failed. Check logs for more information');\n            }\n\n            const response = JSON.parse(content as string);\n            const { access_token, expires_in, refresh_token, scope } = response;\n\n            const authData: IAuthData = {\n                scope,\n                token: access_token,\n                expiresAt: expires_in,\n                refreshToken: refresh_token,\n            };\n\n            const result = await this.config.authorizationCallback?.(authData, user, read, modify, http, persis);\n\n            await this.saveToken(authData, user.id, persis);\n\n            return {\n                status: statusCode,\n                content: result?.responseContent || this.defaultContents.success,\n            };\n        } catch (error) {\n            this.app.getLogger().error(error);\n            return {\n                status: HttpStatusCode.INTERNAL_SERVER_ERROR,\n                content: this.defaultContents.failed,\n            };\n        }\n    }\n\n    private async saveToken(authData: IAuthData, userId: string, persis: IPersistence): Promise<string> {\n        const { scope, token, expiresAt, refreshToken } = authData;\n\n        return persis.updateByAssociations(\n            [\n                new RocketChatAssociationRecord(RocketChatAssociationModel.USER, userId),\n                new RocketChatAssociationRecord(RocketChatAssociationModel.MISC, `${this.config.alias}-oauth-connection`),\n            ],\n            {\n                scope,\n                token,\n                expiresAt: expiresAt || '',\n                refreshToken: refreshToken || '',\n            },\n            true, // we want to create the record if it doesn't exist\n        );\n    }\n\n    private async removeToken({ userId, persis }: { userId: string; persis: IPersistence }): Promise<IAuthData> {\n        const [result] = (await persis.removeByAssociations([\n            new RocketChatAssociationRecord(RocketChatAssociationModel.USER, userId),\n            new RocketChatAssociationRecord(RocketChatAssociationModel.MISC, `${this.config.alias}-oauth-connection`),\n        ])) as unknown as Array<IAuthData>;\n\n        return result;\n    }\n}\n"]}