{"version":3,"sources":["src/server/compiler/modules/networking.ts"],"names":[],"mappings":";;;AAIA,wBAAgD;AAChD,8EAA2E;AAC3E,8EAA2E;AAC3E,qEAAkE;AAQlE,MAAM,yBAAyB,GAAG,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;AAEtD,MAAM,oBAAoB,GAAG,CAAC,MAAc,EAAE,EAAE;IACnD,OAAO,CAAC,KAAa,EAAgC,EAAE,CAAC,CAAC;QACrD,GAAG,CAAC,MAAM,EAAE,IAAY,EAAE,QAAQ;YAC9B,IAAI,yBAAyB,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBAC1C,MAAM,IAAI,8BAA2B,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aACvD;YAED,IAAI,CAAC,2CAAoB,CAAC,aAAa,CAAC,KAAK,EAAE,+BAAc,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;gBAC/E,MAAM,IAAI,6CAAqB,CAAC;oBAC5B,KAAK;oBACL,kBAAkB,EAAE,CAAC,+BAAc,CAAC,UAAU,CAAC,OAAO,CAAC;oBACvD,UAAU,EAAE,GAAG,MAAM,IAAI,IAAI,EAAE;iBAClC,CAAC,CAAC;aACN;YAED,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QAC/C,CAAC;KACJ,CAAC,CAAC;AACP,CAAC,CAAC;AAlBW,QAAA,oBAAoB,wBAkB/B","file":"networking.js","sourcesContent":["import type * as http from 'http';\nimport type * as https from 'https';\nimport type * as net from 'net';\n\nimport { ForbiddenNativeModuleAccess } from '.';\nimport { PermissionDeniedError } from '../../errors/PermissionDeniedError';\nimport { AppPermissionManager } from '../../managers/AppPermissionManager';\nimport { AppPermissions } from '../../permissions/AppPermissions';\n\ntype IHttp = typeof http;\ntype IHttps = typeof https;\ntype INet = typeof net;\n\ntype NetworkingLibs = IHttp | IHttps | INet;\n\nconst networkingModuleBlockList = ['createServer', 'Server'];\n\nexport const moduleHandlerFactory = (module: string) => {\n    return (appId: string): ProxyHandler<NetworkingLibs> => ({\n        get(target, prop: string, receiver) {\n            if (networkingModuleBlockList.includes(prop)) {\n                throw new ForbiddenNativeModuleAccess(module, prop);\n            }\n\n            if (!AppPermissionManager.hasPermission(appId, AppPermissions.networking.default)) {\n                throw new PermissionDeniedError({\n                    appId,\n                    missingPermissions: [AppPermissions.networking.default],\n                    methodName: `${module}.${prop}`,\n                });\n            }\n\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n};\n"]}