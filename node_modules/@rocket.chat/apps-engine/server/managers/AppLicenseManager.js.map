{"version":3,"sources":["src/server/managers/AppLicenseManager.ts"],"names":[],"mappings":"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","file":"AppLicenseManager.js","sourcesContent":["import type { AppManager } from '../AppManager';\nimport type { UserBridge } from '../bridges';\nimport type { IInternalUserBridge } from '../bridges/IInternalUserBridge';\nimport { InvalidLicenseError } from '../errors';\nimport type { IMarketplaceInfo } from '../marketplace';\nimport { Crypto } from '../marketplace/license';\nimport type { AppLicenseValidationResult } from '../marketplace/license';\nimport { MarketplacePurchaseType } from '../marketplace/MarketplacePurchaseType';\n\nenum LicenseVersion {\n    v1 = 1,\n}\n\nexport class AppLicenseManager {\n    private readonly crypto: Crypto;\n\n    private readonly userBridge: UserBridge;\n\n    constructor(private readonly manager: AppManager) {\n        this.crypto = new Crypto(this.manager.getBridges().getInternalBridge());\n        this.userBridge = this.manager.getBridges().getUserBridge();\n    }\n\n    public async validate(validationResult: AppLicenseValidationResult, appMarketplaceInfo?: IMarketplaceInfo): Promise<void> {\n        if (!appMarketplaceInfo || appMarketplaceInfo.purchaseType !== MarketplacePurchaseType.PurchaseTypeSubscription) {\n            return;\n        }\n\n        validationResult.setValidated(true);\n\n        const encryptedLicense = appMarketplaceInfo.subscriptionInfo.license.license;\n\n        if (!encryptedLicense) {\n            validationResult.addError('license', 'License for app is invalid');\n\n            throw new InvalidLicenseError(validationResult);\n        }\n\n        let license;\n        try {\n            license = (await this.crypto.decryptLicense(encryptedLicense)) as any;\n        } catch (err) {\n            validationResult.addError('publicKey', err.message);\n\n            throw new InvalidLicenseError(validationResult);\n        }\n\n        switch (license.version) {\n            case LicenseVersion.v1:\n                await this.validateV1(appMarketplaceInfo, license, validationResult);\n                break;\n        }\n    }\n\n    private async validateV1(appMarketplaceInfo: IMarketplaceInfo, license: any, validationResult: AppLicenseValidationResult): Promise<void> {\n        if (license.isBundle && (!appMarketplaceInfo.bundledIn || !appMarketplaceInfo.bundledIn.find((value) => value.bundleId === license.appId))) {\n            validationResult.addError('bundle', 'License issued for a bundle that does not contain the app');\n        } else if (!license.isBundle && license.appId !== appMarketplaceInfo.id) {\n            validationResult.addError('appId', `License hasn't been issued for this app`);\n        }\n\n        const renewal = new Date(license.renewalDate);\n        const expire = new Date(license.expireDate);\n        const now = new Date();\n\n        if (expire < now) {\n            validationResult.addError('expire', 'License is no longer valid and needs to be renewed');\n        }\n\n        const currentActiveUsers = await (this.userBridge as UserBridge & IInternalUserBridge).getActiveUserCount();\n\n        if (license.maxSeats < currentActiveUsers) {\n            validationResult.addError('maxSeats', 'License does not accomodate the current amount of active users. Please increase the number of seats');\n        }\n\n        if (validationResult.hasErrors) {\n            throw new InvalidLicenseError(validationResult);\n        }\n\n        if (renewal < now) {\n            validationResult.addWarning('renewal', 'License has expired and needs to be renewed');\n        }\n\n        if (license.seats < currentActiveUsers) {\n            validationResult.addWarning(\n                'seats',\n                'License does not have enough seats to accommodate the current amount of active users. Please increase the number of seats',\n            );\n        }\n    }\n}\n"]}