{"version":3,"sources":["src/server/bridges/RoleBridge.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,2EAAwE;AACxE,2EAAwE;AACxE,kEAA+D;AAC/D,6CAA0C;AAE1C,MAAsB,UAAW,SAAQ,uBAAU;IAClC,kBAAkB,CAAC,QAAqC,EAAE,KAAa;;YAChF,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;gBAC/B,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;aACjD;QACL,CAAC;KAAA;IAEY,gBAAgB,CAAC,KAAa;;YACvC,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;gBAC/B,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;aACrC;QACL,CAAC;KAAA;IAMO,iBAAiB,CAAC,KAAa;QACnC,IAAI,2CAAoB,CAAC,aAAa,CAAC,KAAK,EAAE,+BAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACrE,OAAO,IAAI,CAAC;SACf;QAED,2CAAoB,CAAC,gBAAgB,CACjC,IAAI,6CAAqB,CAAC;YACtB,KAAK;YACL,kBAAkB,EAAE,CAAC,+BAAc,CAAC,IAAI,CAAC,IAAI,CAAC;SACjD,CAAC,CACL,CAAC;QAEF,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ;AA/BD,gCA+BC","file":"RoleBridge.js","sourcesContent":["import type { IRole } from '../../definition/roles';\nimport { PermissionDeniedError } from '../errors/PermissionDeniedError';\nimport { AppPermissionManager } from '../managers/AppPermissionManager';\nimport { AppPermissions } from '../permissions/AppPermissions';\nimport { BaseBridge } from './BaseBridge';\n\nexport abstract class RoleBridge extends BaseBridge {\n    public async doGetOneByIdOrName(idOrName: IRole['id'] | IRole['name'], appId: string): Promise<IRole | null> {\n        if (this.hasReadPermission(appId)) {\n            return this.getOneByIdOrName(idOrName, appId);\n        }\n    }\n\n    public async doGetCustomRoles(appId: string): Promise<Array<IRole>> {\n        if (this.hasReadPermission(appId)) {\n            return this.getCustomRoles(appId);\n        }\n    }\n\n    protected abstract getOneByIdOrName(idOrName: IRole['id'] | IRole['name'], appId: string): Promise<IRole | null>;\n\n    protected abstract getCustomRoles(appId: string): Promise<Array<IRole>>;\n\n    private hasReadPermission(appId: string): boolean {\n        if (AppPermissionManager.hasPermission(appId, AppPermissions.role.read)) {\n            return true;\n        }\n\n        AppPermissionManager.notifyAboutError(\n            new PermissionDeniedError({\n                appId,\n                missingPermissions: [AppPermissions.role.read],\n            }),\n        );\n\n        return false;\n    }\n}\n"]}