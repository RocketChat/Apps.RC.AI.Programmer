{"version":3,"sources":["src/server/bridges/ListenerBridge.ts"],"names":[],"mappings":";;;;;;;;;;;;AAGA,6CAA0C;AAE1C,MAAsB,cAAe,SAAQ,uBAAU;IACtC,cAAc,CAAC,GAAiB,EAAE,OAAiB;;YAC5D,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAC3C,CAAC;KAAA;IAEY,WAAW,CAAC,GAAiB,EAAE,IAAW;;YACnD,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACrC,CAAC;KAAA;CAKJ;AAZD,wCAYC","file":"ListenerBridge.js","sourcesContent":["import type { IMessage } from '../../definition/messages';\nimport type { AppInterface } from '../../definition/metadata';\nimport type { IRoom } from '../../definition/rooms';\nimport { BaseBridge } from './BaseBridge';\n\nexport abstract class ListenerBridge extends BaseBridge {\n    public async doMessageEvent(int: AppInterface, message: IMessage): Promise<void | boolean | IMessage> {\n        return this.messageEvent(int, message);\n    }\n\n    public async doRoomEvent(int: AppInterface, room: IRoom): Promise<void | boolean | IRoom> {\n        return this.roomEvent(int, room);\n    }\n\n    protected abstract messageEvent(int: AppInterface, message: IMessage): Promise<void | boolean | IMessage>;\n\n    protected abstract roomEvent(int: AppInterface, room: IRoom): Promise<void | boolean | IRoom>;\n}\n"]}