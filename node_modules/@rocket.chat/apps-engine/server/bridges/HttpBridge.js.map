{"version":3,"sources":["src/server/bridges/HttpBridge.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,2EAAwE;AACxE,2EAAwE;AACxE,kEAA+D;AAC/D,6CAA0C;AAS1C,MAAsB,UAAW,SAAQ,uBAAU;IAClC,MAAM,CAAC,IAA4B;;YAC5C,IAAI,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1B;QACL,CAAC;KAAA;IAIO,oBAAoB,CAAC,KAAa;QACtC,IAAI,2CAAoB,CAAC,aAAa,CAAC,KAAK,EAAE,+BAAc,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;YAC9E,OAAO,IAAI,CAAC;SACf;QAED,2CAAoB,CAAC,gBAAgB,CACjC,IAAI,6CAAqB,CAAC;YACtB,KAAK;YACL,kBAAkB,EAAE,CAAC,+BAAc,CAAC,UAAU,CAAC,OAAO,CAAC;SAC1D,CAAC,CACL,CAAC;QAEF,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ;AAvBD,gCAuBC","file":"HttpBridge.js","sourcesContent":["import type { IHttpRequest, IHttpResponse, RequestMethod } from '../../definition/accessors';\nimport { PermissionDeniedError } from '../errors/PermissionDeniedError';\nimport { AppPermissionManager } from '../managers/AppPermissionManager';\nimport { AppPermissions } from '../permissions/AppPermissions';\nimport { BaseBridge } from './BaseBridge';\n\nexport interface IHttpBridgeRequestInfo {\n    appId: string;\n    method: RequestMethod;\n    url: string;\n    request: IHttpRequest;\n}\n\nexport abstract class HttpBridge extends BaseBridge {\n    public async doCall(info: IHttpBridgeRequestInfo): Promise<IHttpResponse> {\n        if (this.hasDefaultPermission(info.appId)) {\n            return this.call(info);\n        }\n    }\n\n    protected abstract call(info: IHttpBridgeRequestInfo): Promise<IHttpResponse>;\n\n    private hasDefaultPermission(appId: string): boolean {\n        if (AppPermissionManager.hasPermission(appId, AppPermissions.networking.default)) {\n            return true;\n        }\n\n        AppPermissionManager.notifyAboutError(\n            new PermissionDeniedError({\n                appId,\n                missingPermissions: [AppPermissions.networking.default],\n            }),\n        );\n\n        return false;\n    }\n}\n"]}