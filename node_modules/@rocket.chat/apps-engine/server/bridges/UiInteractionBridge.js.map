{"version":3,"sources":["src/server/bridges/UiInteractionBridge.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEA,2EAAwE;AACxE,2EAAwE;AACxE,kEAA+D;AAC/D,6CAA0C;AAE1C,MAAsB,mBAAoB,SAAQ,uBAAU;IAC3C,YAAY,CAAC,IAAW,EAAE,WAA8B,EAAE,KAAa;;YAChF,IAAI,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,EAAE;gBACtC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;aACpD;QACL,CAAC;KAAA;IAIO,wBAAwB,CAAC,KAAa;QAC1C,IAAI,2CAAoB,CAAC,aAAa,CAAC,KAAK,EAAE,+BAAc,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE;YAC1E,OAAO,IAAI,CAAC;SACf;QAED,2CAAoB,CAAC,gBAAgB,CACjC,IAAI,6CAAqB,CAAC;YACtB,KAAK;YACL,kBAAkB,EAAE,CAAC,+BAAc,CAAC,EAAE,CAAC,WAAW,CAAC;SACtD,CAAC,CACL,CAAC;QAEF,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ;AAvBD,kDAuBC","file":"UiInteractionBridge.js","sourcesContent":["import type { IUIKitInteraction } from '../../definition/uikit';\nimport type { IUser } from '../../definition/users';\nimport { PermissionDeniedError } from '../errors/PermissionDeniedError';\nimport { AppPermissionManager } from '../managers/AppPermissionManager';\nimport { AppPermissions } from '../permissions/AppPermissions';\nimport { BaseBridge } from './BaseBridge';\n\nexport abstract class UiInteractionBridge extends BaseBridge {\n    public async doNotifyUser(user: IUser, interaction: IUIKitInteraction, appId: string): Promise<void> {\n        if (this.hasInteractionPermission(appId)) {\n            return this.notifyUser(user, interaction, appId);\n        }\n    }\n\n    protected abstract notifyUser(user: IUser, interaction: IUIKitInteraction, appId: string): Promise<void>;\n\n    private hasInteractionPermission(appId: string): boolean {\n        if (AppPermissionManager.hasPermission(appId, AppPermissions.ui.interaction)) {\n            return true;\n        }\n\n        AppPermissionManager.notifyAboutError(\n            new PermissionDeniedError({\n                appId,\n                missingPermissions: [AppPermissions.ui.interaction],\n            }),\n        );\n\n        return false;\n    }\n}\n"]}