{"version":3,"sources":["src/server/storage/AppSourceStorage.ts"],"names":[],"mappings":";;;AAEA,MAAsB,gBAAgB;CAqCrC;AArCD,4CAqCC","file":"AppSourceStorage.js","sourcesContent":["import type { IAppStorageItem } from './IAppStorageItem';\n\nexport abstract class AppSourceStorage {\n    /**\n     * Stores an app package (zip file) in the underlying\n     * storage provided by the host\n     *\n     * @param item descriptor of the App\n     * @param zip the app package file contents\n     *\n     * @returns the path in which the pacakge has been stored\n     */\n    public abstract store(item: IAppStorageItem, zip: Buffer): Promise<string>;\n\n    /**\n     * Fetches an app's package file contents\n     *\n     * @param item descriptor of the App\n     *\n     * @returns buffer containing the file contents of the app's package\n     */\n    public abstract fetch(item: IAppStorageItem): Promise<Buffer>;\n\n    /**\n     * Updates an app package (zip file) in the underlying\n     * storage provided by the host\n     *\n     * @param item descriptor of the App\n     * @param zip the app package file contents\n     *\n     * @returns the path in which the pacakge has been stored\n     */\n    public abstract update(item: IAppStorageItem, zip: Buffer): Promise<string>;\n\n    /**\n     *\n     * @param item descriptor of the App\n     */\n    public abstract remove(item: IAppStorageItem): Promise<void>;\n}\n"]}