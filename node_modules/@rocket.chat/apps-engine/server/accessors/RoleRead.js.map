{"version":3,"sources":["src/server/accessors/RoleRead.ts"],"names":[],"mappings":";;;AAIA,MAAa,QAAQ;IACjB,YAAoB,UAAsB,EAAU,KAAa;QAA7C,eAAU,GAAV,UAAU,CAAY;QAAU,UAAK,GAAL,KAAK,CAAQ;IAAG,CAAC;IAE9D,gBAAgB,CAAC,QAAqC;QACzD,OAAO,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACpE,CAAC;IAEM,cAAc;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxD,CAAC;CACJ;AAVD,4BAUC","file":"RoleRead.js","sourcesContent":["import type { IRoleRead } from '../../definition/accessors/IRoleRead';\nimport type { IRole } from '../../definition/roles';\nimport type { RoleBridge } from '../bridges';\n\nexport class RoleRead implements IRoleRead {\n    constructor(private roleBridge: RoleBridge, private appId: string) {}\n\n    public getOneByIdOrName(idOrName: IRole['id'] | IRole['name']): Promise<IRole | null> {\n        return this.roleBridge.doGetOneByIdOrName(idOrName, this.appId);\n    }\n\n    public getCustomRoles(): Promise<Array<IRole>> {\n        return this.roleBridge.doGetCustomRoles(this.appId);\n    }\n}\n"]}