{"version":3,"sources":["src/server/accessors/LivechatUpdater.ts"],"names":[],"mappings":";;;AAKA,MAAa,eAAe;IACxB,YAA6B,OAAmB,EAAmB,KAAa;QAAnD,YAAO,GAAP,OAAO,CAAY;QAAmB,UAAK,GAAL,KAAK,CAAQ;IAAG,CAAC;IAE7E,eAAe,CAAC,OAAiB,EAAE,YAAmC;QACzE,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,iBAAiB,CAAC,OAAO,EAAE,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACjG,CAAC;IAEM,SAAS,CAAC,IAAmB,EAAE,OAAe,EAAE,MAAc;QACjE,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3F,CAAC;IAEM,eAAe,CAAC,KAAwB,EAAE,GAAW,EAAE,KAAa,EAAE,SAAkB;QAC3F,OAAO,IAAI,CAAC,OAAO;aACd,iBAAiB,EAAE;aACnB,iBAAiB,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC;aAC/D,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACtC,CAAC;CACJ;AAjBD,0CAiBC","file":"LivechatUpdater.js","sourcesContent":["import type { ILivechatUpdater } from '../../definition/accessors';\nimport type { ILivechatRoom, ILivechatTransferData, IVisitor } from '../../definition/livechat';\nimport type { IUser } from '../../definition/users';\nimport type { AppBridges } from '../bridges';\n\nexport class LivechatUpdater implements ILivechatUpdater {\n    constructor(private readonly bridges: AppBridges, private readonly appId: string) {}\n\n    public transferVisitor(visitor: IVisitor, transferData: ILivechatTransferData): Promise<boolean> {\n        return this.bridges.getLivechatBridge().doTransferVisitor(visitor, transferData, this.appId);\n    }\n\n    public closeRoom(room: ILivechatRoom, comment: string, closer?: IUser): Promise<boolean> {\n        return this.bridges.getLivechatBridge().doCloseRoom(room, comment, closer, this.appId);\n    }\n\n    public setCustomFields(token: IVisitor['token'], key: string, value: string, overwrite: boolean): Promise<boolean> {\n        return this.bridges\n            .getLivechatBridge()\n            .doSetCustomFields({ token, key, value, overwrite }, this.appId)\n            .then((result) => result > 0);\n    }\n}\n"]}