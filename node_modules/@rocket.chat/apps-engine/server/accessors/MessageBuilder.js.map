{"version":3,"sources":["src/server/accessors/MessageBuilder.ts"],"names":[],"mappings":"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","file":"MessageBuilder.js","sourcesContent":["import type { Block } from '@rocket.chat/ui-kit';\n\nimport type { IMessageBuilder } from '../../definition/accessors';\nimport type { IMessage, IMessageAttachment } from '../../definition/messages';\nimport { RocketChatAssociationModel } from '../../definition/metadata';\nimport type { IRoom } from '../../definition/rooms';\nimport type { IBlock } from '../../definition/uikit';\nimport { BlockBuilder } from '../../definition/uikit';\nimport type { IUser } from '../../definition/users';\n\nexport class MessageBuilder implements IMessageBuilder {\n    public kind: RocketChatAssociationModel.MESSAGE;\n\n    private msg: IMessage;\n\n    constructor(message?: IMessage) {\n        this.kind = RocketChatAssociationModel.MESSAGE;\n        this.msg = message || ({} as IMessage);\n    }\n\n    public setData(data: IMessage): IMessageBuilder {\n        delete data.id;\n        this.msg = data;\n\n        return this;\n    }\n\n    public setUpdateData(data: IMessage, editor: IUser): IMessageBuilder {\n        this.msg = data;\n        this.msg.editor = editor;\n        this.msg.editedAt = new Date();\n\n        return this;\n    }\n\n    public setThreadId(threadId: string): IMessageBuilder {\n        this.msg.threadId = threadId;\n\n        return this;\n    }\n\n    public getThreadId(): string {\n        return this.msg.threadId;\n    }\n\n    public setRoom(room: IRoom): IMessageBuilder {\n        this.msg.room = room;\n        return this;\n    }\n\n    public getRoom(): IRoom {\n        return this.msg.room;\n    }\n\n    public setSender(sender: IUser): IMessageBuilder {\n        this.msg.sender = sender;\n        return this;\n    }\n\n    public getSender(): IUser {\n        return this.msg.sender;\n    }\n\n    public setText(text: string): IMessageBuilder {\n        this.msg.text = text;\n        return this;\n    }\n\n    public getText(): string {\n        return this.msg.text;\n    }\n\n    public setEmojiAvatar(emoji: string): IMessageBuilder {\n        this.msg.emoji = emoji;\n        return this;\n    }\n\n    public getEmojiAvatar(): string {\n        return this.msg.emoji;\n    }\n\n    public setAvatarUrl(avatarUrl: string): IMessageBuilder {\n        this.msg.avatarUrl = avatarUrl;\n        return this;\n    }\n\n    public getAvatarUrl(): string {\n        return this.msg.avatarUrl;\n    }\n\n    public setUsernameAlias(alias: string): IMessageBuilder {\n        this.msg.alias = alias;\n        return this;\n    }\n\n    public getUsernameAlias(): string {\n        return this.msg.alias;\n    }\n\n    public addAttachment(attachment: IMessageAttachment): IMessageBuilder {\n        if (!this.msg.attachments) {\n            this.msg.attachments = [];\n        }\n\n        this.msg.attachments.push(attachment);\n        return this;\n    }\n\n    public setAttachments(attachments: Array<IMessageAttachment>): IMessageBuilder {\n        this.msg.attachments = attachments;\n        return this;\n    }\n\n    public getAttachments(): Array<IMessageAttachment> {\n        return this.msg.attachments;\n    }\n\n    public replaceAttachment(position: number, attachment: IMessageAttachment): IMessageBuilder {\n        if (!this.msg.attachments) {\n            this.msg.attachments = [];\n        }\n\n        if (!this.msg.attachments[position]) {\n            throw new Error(`No attachment found at the index of \"${position}\" to replace.`);\n        }\n\n        this.msg.attachments[position] = attachment;\n        return this;\n    }\n\n    public removeAttachment(position: number): IMessageBuilder {\n        if (!this.msg.attachments) {\n            this.msg.attachments = [];\n        }\n\n        if (!this.msg.attachments[position]) {\n            throw new Error(`No attachment found at the index of \"${position}\" to remove.`);\n        }\n\n        this.msg.attachments.splice(position, 1);\n\n        return this;\n    }\n\n    public setEditor(user: IUser): IMessageBuilder {\n        this.msg.editor = user;\n        return this;\n    }\n\n    public getEditor(): IUser {\n        return this.msg.editor;\n    }\n\n    public setGroupable(groupable: boolean): IMessageBuilder {\n        this.msg.groupable = groupable;\n        return this;\n    }\n\n    public getGroupable(): boolean {\n        return this.msg.groupable;\n    }\n\n    public setParseUrls(parseUrls: boolean): IMessageBuilder {\n        this.msg.parseUrls = parseUrls;\n        return this;\n    }\n\n    public getParseUrls(): boolean {\n        return this.msg.parseUrls;\n    }\n\n    public getMessage(): IMessage {\n        if (!this.msg.room) {\n            throw new Error('The \"room\" property is required.');\n        }\n\n        return this.msg;\n    }\n\n    public addBlocks(blocks: BlockBuilder | Array<IBlock | Block>) {\n        if (!Array.isArray(this.msg.blocks)) {\n            this.msg.blocks = [];\n        }\n\n        if (blocks instanceof BlockBuilder) {\n            this.msg.blocks.push(...blocks.getBlocks());\n        } else {\n            this.msg.blocks.push(...blocks);\n        }\n\n        return this;\n    }\n\n    public setBlocks(blocks: BlockBuilder | Array<IBlock | Block>) {\n        if (blocks instanceof BlockBuilder) {\n            this.msg.blocks = blocks.getBlocks();\n        } else {\n            this.msg.blocks = blocks;\n        }\n\n        return this;\n    }\n\n    public getBlocks() {\n        return this.msg.blocks;\n    }\n\n    public addCustomField(key: string, value: any): IMessageBuilder {\n        if (!this.msg.customFields) {\n            this.msg.customFields = {};\n        }\n\n        if (this.msg.customFields[key]) {\n            throw new Error(`The message already contains a custom field by the key: ${key}`);\n        }\n\n        if (key.includes('.')) {\n            throw new Error(`The given key contains a period, which is not allowed. Key: ${key}`);\n        }\n\n        this.msg.customFields[key] = value;\n        return this;\n    }\n}\n"]}