{"version":3,"sources":["src/server/accessors/PersistenceRead.ts"],"names":[],"mappings":";;;AAIA,MAAa,eAAe;IACxB,YAAoB,aAAgC,EAAU,KAAa;QAAvD,kBAAa,GAAb,aAAa,CAAmB;QAAU,UAAK,GAAL,KAAK,CAAQ;IAAG,CAAC;IAExE,IAAI,CAAC,EAAU;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACzD,CAAC;IAEM,iBAAiB,CAAC,WAAwC;QAC7D,OAAO,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,KAAK,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACvF,CAAC;IAEM,kBAAkB,CAAC,YAAgD;QACtE,OAAO,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7E,CAAC;CACJ;AAdD,0CAcC","file":"PersistenceRead.js","sourcesContent":["import type { IPersistenceRead } from '../../definition/accessors';\nimport type { RocketChatAssociationRecord } from '../../definition/metadata';\nimport type { PersistenceBridge } from '../bridges';\n\nexport class PersistenceRead implements IPersistenceRead {\n    constructor(private persistBridge: PersistenceBridge, private appId: string) {}\n\n    public read(id: string): Promise<object> {\n        return this.persistBridge.doReadById(id, this.appId);\n    }\n\n    public readByAssociation(association: RocketChatAssociationRecord): Promise<Array<object>> {\n        return this.persistBridge.doReadByAssociations(new Array(association), this.appId);\n    }\n\n    public readByAssociations(associations: Array<RocketChatAssociationRecord>): Promise<Array<object>> {\n        return this.persistBridge.doReadByAssociations(associations, this.appId);\n    }\n}\n"]}