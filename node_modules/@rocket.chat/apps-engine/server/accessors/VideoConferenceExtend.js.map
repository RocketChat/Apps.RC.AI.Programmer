{"version":3,"sources":["src/server/accessors/VideoConferenceExtend.ts"],"names":[],"mappings":";;;AACA,wDAAuE;AAGvE,iDAA8C;AAE9C,MAAa,uBAAuB;IAGhC,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAChD,IAAI,CAAC,IAAI,GAAG,qCAA0B,CAAC,gBAAgB,CAAC;IAC5D,CAAC;IAEM,eAAe,CAAC,KAA0B;QAC7C,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1C,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,SAAS,CAAC,KAAgC;QAC7C,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,UAAU,CAAC,KAAkC;QAChD,IAAI,CAAC,eAAe,CAAC,OAAO,GAAG;YAC3B,GAAG,EAAE,KAAK;YACV,+DAA+D;YAC/D,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,EAAE;SACX,CAAC;QAEF,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,UAAU,CAAC,KAAiC;QAC/C,IAAI,CAAC,eAAe,CAAC,OAAO,GAAG,KAAK,CAAC;QAErC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,OAAO,CAAC,MAAoC,EAAE,EAAgC;QACjF,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC;YAC5B,GAAG,EAAE,MAAM;YACX,EAAE;YACF,+DAA+D;YAC/D,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,EAAE;SACX,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,kBAAkB;QACrB,OAAO,qBAAS,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACrD,CAAC;CACJ;AAnDD,0DAmDC","file":"VideoConferenceExtend.js","sourcesContent":["import type { IVideoConferenceExtender } from '../../definition/accessors';\nimport { RocketChatAssociationModel } from '../../definition/metadata';\nimport type { IVideoConferenceUser, VideoConference } from '../../definition/videoConferences';\nimport type { VideoConferenceMember } from '../../definition/videoConferences/IVideoConference';\nimport { Utilities } from '../misc/Utilities';\n\nexport class VideoConferenceExtender implements IVideoConferenceExtender {\n    public kind: RocketChatAssociationModel.VIDEO_CONFERENCE;\n\n    constructor(private videoConference: VideoConference) {\n        this.kind = RocketChatAssociationModel.VIDEO_CONFERENCE;\n    }\n\n    public setProviderData(value: Record<string, any>): IVideoConferenceExtender {\n        this.videoConference.providerData = value;\n\n        return this;\n    }\n\n    public setStatus(value: VideoConference['status']): IVideoConferenceExtender {\n        this.videoConference.status = value;\n\n        return this;\n    }\n\n    public setEndedBy(value: IVideoConferenceUser['_id']): IVideoConferenceExtender {\n        this.videoConference.endedBy = {\n            _id: value,\n            // Name and username will be loaded automatically by the bridge\n            username: '',\n            name: '',\n        };\n\n        return this;\n    }\n\n    public setEndedAt(value: VideoConference['endedAt']): IVideoConferenceExtender {\n        this.videoConference.endedAt = value;\n\n        return this;\n    }\n\n    public addUser(userId: VideoConferenceMember['_id'], ts?: VideoConferenceMember['ts']): IVideoConferenceExtender {\n        this.videoConference.users.push({\n            _id: userId,\n            ts,\n            // Name and username will be loaded automatically by the bridge\n            username: '',\n            name: '',\n        });\n\n        return this;\n    }\n\n    public getVideoConference(): VideoConference {\n        return Utilities.deepClone(this.videoConference);\n    }\n}\n"]}