{"version":3,"sources":["src/server/accessors/Persistence.ts"],"names":[],"mappings":";;;AAIA,MAAa,WAAW;IACpB,YAAoB,aAAgC,EAAU,KAAa;QAAvD,kBAAa,GAAb,aAAa,CAAmB;QAAU,UAAK,GAAL,KAAK,CAAQ;IAAG,CAAC;IAExE,MAAM,CAAC,IAAY;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACzD,CAAC;IAEM,qBAAqB,CAAC,IAAY,EAAE,WAAwC;QAC/E,OAAO,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACjG,CAAC;IAEM,sBAAsB,CAAC,IAAY,EAAE,YAAgD;QACxF,OAAO,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACvF,CAAC;IAEM,MAAM,CAAC,EAAU,EAAE,IAAY,EAAE,MAAM,GAAG,KAAK;QAClD,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACrE,CAAC;IAEM,mBAAmB,CAAC,WAAwC,EAAE,IAAY,EAAE,MAAM,GAAG,KAAK;QAC7F,OAAO,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,IAAI,KAAK,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACvG,CAAC;IAEM,oBAAoB,CAAC,YAAgD,EAAE,IAAY,EAAE,MAAM,GAAG,KAAK;QACtG,OAAO,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,YAAY,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7F,CAAC;IAEM,MAAM,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACvD,CAAC;IAEM,mBAAmB,CAAC,WAAwC;QAC/D,OAAO,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,IAAI,KAAK,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACzF,CAAC;IAEM,oBAAoB,CAAC,YAAgD;QACxE,OAAO,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/E,CAAC;CACJ;AAtCD,kCAsCC","file":"Persistence.js","sourcesContent":["import type { IPersistence } from '../../definition/accessors';\nimport type { RocketChatAssociationRecord } from '../../definition/metadata';\nimport type { PersistenceBridge } from '../bridges/PersistenceBridge';\n\nexport class Persistence implements IPersistence {\n    constructor(private persistBridge: PersistenceBridge, private appId: string) {}\n\n    public create(data: object): Promise<string> {\n        return this.persistBridge.doCreate(data, this.appId);\n    }\n\n    public createWithAssociation(data: object, association: RocketChatAssociationRecord): Promise<string> {\n        return this.persistBridge.doCreateWithAssociations(data, new Array(association), this.appId);\n    }\n\n    public createWithAssociations(data: object, associations: Array<RocketChatAssociationRecord>): Promise<string> {\n        return this.persistBridge.doCreateWithAssociations(data, associations, this.appId);\n    }\n\n    public update(id: string, data: object, upsert = false): Promise<string> {\n        return this.persistBridge.doUpdate(id, data, upsert, this.appId);\n    }\n\n    public updateByAssociation(association: RocketChatAssociationRecord, data: object, upsert = false): Promise<string> {\n        return this.persistBridge.doUpdateByAssociations(new Array(association), data, upsert, this.appId);\n    }\n\n    public updateByAssociations(associations: Array<RocketChatAssociationRecord>, data: object, upsert = false): Promise<string> {\n        return this.persistBridge.doUpdateByAssociations(associations, data, upsert, this.appId);\n    }\n\n    public remove(id: string): Promise<object> {\n        return this.persistBridge.doRemove(id, this.appId);\n    }\n\n    public removeByAssociation(association: RocketChatAssociationRecord): Promise<Array<object>> {\n        return this.persistBridge.doRemoveByAssociations(new Array(association), this.appId);\n    }\n\n    public removeByAssociations(associations: Array<RocketChatAssociationRecord>): Promise<Array<object>> {\n        return this.persistBridge.doRemoveByAssociations(associations, this.appId);\n    }\n}\n"]}